// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Space Users component should render correcty when applicatioon user and space user not exists 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <SpaceUser>
        <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "gap": "20px",
            }
          }
        >
          <Link
            key="1"
            to="/applications/1/settings/spaces/1/settings"
          >
            <LinkAnchor
              href="/applications/1/settings/spaces/1/settings"
              navigate={[Function]}
            >
              <a
                href="/applications/1/settings/spaces/1/settings"
                onClick={[Function]}
              >
                <Button
                  type="primary"
                >
                  <Wave
                    disabled={false}
                  >
                    <button
                      className="ant-btn ant-btn-primary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <LoadingIcon
                        existIcon={false}
                        loading={false}
                        prefixCls="ant-btn"
                      >
                        <CSSMotion
                          motionName="ant-btn-loading-icon-motion"
                          onAppearActive={[Function]}
                          onAppearStart={[Function]}
                          onEnterActive={[Function]}
                          onEnterStart={[Function]}
                          onLeaveActive={[Function]}
                          onLeaveStart={[Function]}
                          removeOnLeave={true}
                          visible={false}
                        >
                          <DomWrapper />
                        </CSSMotion>
                      </LoadingIcon>
                      <span
                        key=".0"
                      >
                         Back to Settings 
                      </span>
                    </button>
                  </Wave>
                </Button>
              </a>
            </LinkAnchor>
          </Link>
          <ForwardRef(InternalForm)
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "filters",
                },
                "_init": true,
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldWarning": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFieldValue": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            layout="inline"
            name="filters"
            onFinish={[Function]}
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          >
            <DisabledContextProvider
              disabled={false}
            >
              <SizeContextProvider>
                <ForwardRef(Form)
                  className="ant-form ant-form-inline"
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "filters",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFieldValue": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  id="filters"
                  name="filters"
                  onFinish={[Function]}
                  onFinishFailed={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <form
                    className="ant-form ant-form-inline"
                    id="filters"
                    onReset={[Function]}
                    onSubmit={[Function]}
                    style={
                      Object {
                        "maxWidth": "100%",
                      }
                    }
                  >
                    <InternalFormItem
                      label="Users"
                      name="user_id"
                    >
                      <WrapperField
                        label="Users"
                        messageVariables={
                          Object {
                            "label": "Users",
                          }
                        }
                        name="user_id"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "filters",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFieldValue": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_user_id"
                          label="Users"
                          messageVariables={
                            Object {
                              "label": "Users",
                            }
                          }
                          name={
                            Array [
                              "user_id",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <ItemHolder
                            errors={Array []}
                            fieldId="filters_user_id"
                            isRequired={false}
                            key="row"
                            label="Users"
                            meta={
                              Object {
                                "errors": Array [],
                                "name": Array [],
                                "touched": false,
                                "validating": false,
                                "warnings": Array [],
                              }
                            }
                            name="user_id"
                            onSubItemMetaChange={[Function]}
                            prefixCls="ant-form"
                            warnings={Array []}
                          >
                            <div
                              className="ant-form-item"
                            >
                              <Row
                                className="ant-form-item-row"
                              >
                                <div
                                  className="ant-row ant-form-item-row"
                                  style={Object {}}
                                >
                                  <FormItemLabel
                                    errors={Array []}
                                    fieldId="filters_user_id"
                                    htmlFor="filters_user_id"
                                    isRequired={false}
                                    label="Users"
                                    meta={
                                      Object {
                                        "errors": Array [],
                                        "name": Array [],
                                        "touched": false,
                                        "validating": false,
                                        "warnings": Array [],
                                      }
                                    }
                                    name="user_id"
                                    onSubItemMetaChange={[Function]}
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    warnings={Array []}
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_user_id"
                                          title="Users"
                                        >
                                          Users
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    fieldId="filters_user_id"
                                    isRequired={false}
                                    label="Users"
                                    marginBottom={null}
                                    meta={
                                      Object {
                                        "errors": Array [],
                                        "name": Array [],
                                        "touched": false,
                                        "validating": false,
                                        "warnings": Array [],
                                      }
                                    }
                                    name={Array []}
                                    onErrorVisibleChanged={[Function]}
                                    onSubItemMetaChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    touched={false}
                                    validating={false}
                                    warnings={Array []}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              childProps={
                                                Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ]
                                              }
                                              update={
                                                <ForwardRef(InternalSelect)
                                                  bordered={true}
                                                  listHeight={128}
                                                  placeholder="select user"
                                                  style={
                                                    Object {
                                                      "width": 200,
                                                    }
                                                  }
                                                />
                                              }
                                            >
                                              <ForwardRef(InternalSelect)
                                                bordered={true}
                                                id="filters_user_id"
                                                listHeight={128}
                                                onChange={[Function]}
                                                placeholder="select user"
                                                style={
                                                  Object {
                                                    "width": 200,
                                                  }
                                                }
                                              >
                                                <Select
                                                  className="ant-select-in-form-item"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  disabled={false}
                                                  dropdownClassName=""
                                                  id="filters_user_id"
                                                  inputIcon={[Function]}
                                                  listHeight={128}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  placeholder="select user"
                                                  placement="bottomLeft"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  style={
                                                    Object {
                                                      "width": 200,
                                                    }
                                                  }
                                                  transitionName="ant-slide-up"
                                                >
                                                  <BaseSelect
                                                    OptionList={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "OptionList",
                                                        "render": [Function],
                                                      }
                                                    }
                                                    activeDescendantId="filters_user_id_list_0"
                                                    activeValue={null}
                                                    autoClearSearchValue={true}
                                                    className="ant-select-in-form-item"
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    disabled={false}
                                                    displayValues={Array []}
                                                    dropdownClassName=""
                                                    dropdownMatchSelectWidth={true}
                                                    emptyOptions={true}
                                                    id="filters_user_id"
                                                    inputIcon={[Function]}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    omitDomProps={
                                                      Array [
                                                        "inputValue",
                                                      ]
                                                    }
                                                    onDisplayValuesChange={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSplit={[Function]}
                                                    placeholder="select user"
                                                    placement="bottomLeft"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    style={
                                                      Object {
                                                        "width": 200,
                                                      }
                                                    }
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <div
                                                      className="ant-select ant-select-in-form-item ant-select-single ant-select-show-arrow"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "width": 200,
                                                        }
                                                      }
                                                    >
                                                      <SelectTrigger
                                                        containerWidth={null}
                                                        disabled={false}
                                                        dropdownClassName=""
                                                        dropdownMatchSelectWidth={true}
                                                        empty={true}
                                                        getTriggerDOMNode={[Function]}
                                                        onPopupMouseEnter={[Function]}
                                                        placement="bottomLeft"
                                                        popupElement={<ForwardRef(OptionList) />}
                                                        prefixCls="ant-select"
                                                        transitionName="ant-slide-up"
                                                      >
                                                        <Trigger
                                                          action={Array []}
                                                          afterPopupVisibleChange={[Function]}
                                                          autoDestroy={false}
                                                          blurDelay={0.15}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottomLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          defaultPopupVisible={false}
                                                          destroyPopupOnHide={false}
                                                          focusDelay={0}
                                                          getDocument={[Function]}
                                                          getPopupClassNameFromAlign={[Function]}
                                                          getTriggerDOMNode={[Function]}
                                                          hideAction={Array []}
                                                          mask={false}
                                                          maskClosable={true}
                                                          mouseEnterDelay={0}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onPopupVisibleChange={[Function]}
                                                          popup={
                                                            <div
                                                              onMouseEnter={[Function]}
                                                            >
                                                              <ForwardRef(OptionList) />
                                                            </div>
                                                          }
                                                          popupAlign={Object {}}
                                                          popupClassName="ant-select-dropdown-empty"
                                                          popupPlacement="bottomLeft"
                                                          popupStyle={
                                                            Object {
                                                              "minWidth": null,
                                                              "width": null,
                                                            }
                                                          }
                                                          popupTransitionName="ant-slide-up"
                                                          prefixCls="ant-select-dropdown"
                                                          showAction={Array []}
                                                        >
                                                          <Selector
                                                            OptionList={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "OptionList",
                                                                "render": [Function],
                                                              }
                                                            }
                                                            activeDescendantId="filters_user_id_list_0"
                                                            activeValue={null}
                                                            autoClearSearchValue={true}
                                                            className="ant-select-in-form-item"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            disabled={false}
                                                            displayValues={Array []}
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_user_id"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-placeholder"
                                                                  >
                                                                    select user
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            dropdownMatchSelectWidth={true}
                                                            emptyOptions={true}
                                                            id="filters_user_id"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            key="trigger"
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            omitDomProps={
                                                              Array [
                                                                "inputValue",
                                                              ]
                                                            }
                                                            onDisplayValuesChange={[Function]}
                                                            onRemove={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSplit={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placeholder="select user"
                                                            placement="bottomLeft"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            style={
                                                              Object {
                                                                "width": 200,
                                                              }
                                                            }
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            values={Array []}
                                                          >
                                                            <div
                                                              className="ant-select-selector"
                                                              onClick={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SingleSelector
                                                                OptionList={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "OptionList",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                activeDescendantId="filters_user_id_list_0"
                                                                activeValue={null}
                                                                autoClearSearchValue={true}
                                                                className="ant-select-in-form-item"
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                disabled={false}
                                                                displayValues={Array []}
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="filters_user_id_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="filters_user_id_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="filters_user_id_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="filters_user_id"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          type="search"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-placeholder"
                                                                      >
                                                                        select user
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                dropdownMatchSelectWidth={true}
                                                                emptyOptions={true}
                                                                id="filters_user_id"
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                inputRef={
                                                                  Object {
                                                                    "current": <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_user_id"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />,
                                                                  }
                                                                }
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                omitDomProps={
                                                                  Array [
                                                                    "inputValue",
                                                                  ]
                                                                }
                                                                onDisplayValuesChange={[Function]}
                                                                onInputChange={[Function]}
                                                                onInputCompositionEnd={[Function]}
                                                                onInputCompositionStart={[Function]}
                                                                onInputKeyDown={[Function]}
                                                                onInputMouseDown={[Function]}
                                                                onInputPaste={[Function]}
                                                                onRemove={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSplit={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="select user"
                                                                placement="bottomLeft"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={false}
                                                                style={
                                                                  Object {
                                                                    "width": 200,
                                                                  }
                                                                }
                                                                tokenWithEnter={false}
                                                                transitionName="ant-slide-up"
                                                                values={Array []}
                                                              >
                                                                <span
                                                                  className="ant-select-selection-search"
                                                                >
                                                                  <Input
                                                                    activeDescendantId="filters_user_id_list_0"
                                                                    attrs={Object {}}
                                                                    disabled={false}
                                                                    editable={false}
                                                                    id="filters_user_id"
                                                                    inputElement={null}
                                                                    onChange={[Function]}
                                                                    onCompositionEnd={[Function]}
                                                                    onCompositionStart={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onPaste={[Function]}
                                                                    prefixCls="ant-select"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autoComplete="off"
                                                                      className="ant-select-selection-search-input"
                                                                      disabled={false}
                                                                      id="filters_user_id"
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      readOnly={true}
                                                                      role="combobox"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0,
                                                                        }
                                                                      }
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </span>
                                                                <span
                                                                  className="ant-select-selection-placeholder"
                                                                >
                                                                  select user
                                                                </span>
                                                              </SingleSelector>
                                                            </div>
                                                          </Selector>
                                                        </Trigger>
                                                      </SelectTrigger>
                                                      <TransBtn
                                                        className="ant-select-arrow"
                                                        customizeIcon={[Function]}
                                                        customizeIconProps={
                                                          Object {
                                                            "focused": false,
                                                            "loading": undefined,
                                                            "open": undefined,
                                                            "searchValue": "",
                                                            "showSearch": false,
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-arrow"
                                                          onMouseDown={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitUserSelect": "none",
                                                              "userSelect": "none",
                                                            }
                                                          }
                                                          unselectable="on"
                                                        >
                                                          <ForwardRef(DownOutlined)
                                                            className="ant-select-suffix"
                                                          >
                                                            <AntdIcon
                                                              className="ant-select-suffix"
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="down"
                                                                className="anticon anticon-down ant-select-suffix"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "down",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    data-icon="down"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-down"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                      key="svg-down-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(DownOutlined)>
                                                        </span>
                                                      </TransBtn>
                                                    </div>
                                                  </BaseSelect>
                                                </Select>
                                              </ForwardRef(InternalSelect)>
                                            </Component>
                                          </div>
                                        </div>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </div>
                          </ItemHolder>
                        </Field>
                      </WrapperField>
                    </InternalFormItem>
                    <InternalFormItem>
                      <ItemHolder
                        errors={Array []}
                        key="row"
                        meta={
                          Object {
                            "errors": Array [],
                            "name": Array [],
                            "touched": false,
                            "validating": false,
                            "warnings": Array [],
                          }
                        }
                        onSubItemMetaChange={[Function]}
                        prefixCls="ant-form"
                        warnings={Array []}
                      >
                        <div
                          className="ant-form-item"
                        >
                          <Row
                            className="ant-form-item-row"
                          >
                            <div
                              className="ant-row ant-form-item-row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                errors={Array []}
                                meta={
                                  Object {
                                    "errors": Array [],
                                    "name": Array [],
                                    "touched": false,
                                    "validating": false,
                                    "warnings": Array [],
                                  }
                                }
                                onSubItemMetaChange={[Function]}
                                prefixCls="ant-form"
                                requiredMark={true}
                                warnings={Array []}
                              />
                              <FormItemInput
                                errors={Array []}
                                marginBottom={null}
                                meta={
                                  Object {
                                    "errors": Array [],
                                    "name": Array [],
                                    "touched": false,
                                    "validating": false,
                                    "warnings": Array [],
                                  }
                                }
                                name={Array []}
                                onErrorVisibleChanged={[Function]}
                                onSubItemMetaChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Button
                                          htmlType="submit"
                                          type="primary"
                                        >
                                          <Wave
                                            disabled={false}
                                          >
                                            <button
                                              className="ant-btn ant-btn-primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Add Space User
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </div>
                                    </div>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </div>
                      </ItemHolder>
                    </InternalFormItem>
                  </form>
                </ForwardRef(Form)>
              </SizeContextProvider>
            </DisabledContextProvider>
          </ForwardRef(InternalForm)>
          <mockConstructor
            role="admin"
            spaceID={1}
          >
            <div
              id="userList"
              role="admin"
              spaceID={1}
            />
          </mockConstructor>
        </div>
      </SpaceUser>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Space Users component should render correcty when loadingapps is true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <SpaceUser>
        <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "gap": "20px",
            }
          }
        >
          <Link
            key="1"
            to="/applications/1/settings/spaces/1/settings"
          >
            <LinkAnchor
              href="/applications/1/settings/spaces/1/settings"
              navigate={[Function]}
            >
              <a
                href="/applications/1/settings/spaces/1/settings"
                onClick={[Function]}
              >
                <Button
                  type="primary"
                >
                  <Wave
                    disabled={false}
                  >
                    <button
                      className="ant-btn ant-btn-primary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <LoadingIcon
                        existIcon={false}
                        loading={false}
                        prefixCls="ant-btn"
                      >
                        <CSSMotion
                          motionName="ant-btn-loading-icon-motion"
                          onAppearActive={[Function]}
                          onAppearStart={[Function]}
                          onEnterActive={[Function]}
                          onEnterStart={[Function]}
                          onLeaveActive={[Function]}
                          onLeaveStart={[Function]}
                          removeOnLeave={true}
                          visible={false}
                        >
                          <DomWrapper />
                        </CSSMotion>
                      </LoadingIcon>
                      <span
                        key=".0"
                      >
                         Back to Settings 
                      </span>
                    </button>
                  </Wave>
                </Button>
              </a>
            </LinkAnchor>
          </Link>
          <ForwardRef(InternalForm)
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "filters",
                },
                "_init": true,
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldWarning": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFieldValue": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            layout="inline"
            name="filters"
            onFinish={[Function]}
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          >
            <DisabledContextProvider
              disabled={false}
            >
              <SizeContextProvider>
                <ForwardRef(Form)
                  className="ant-form ant-form-inline"
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "filters",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFieldValue": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  id="filters"
                  name="filters"
                  onFinish={[Function]}
                  onFinishFailed={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <form
                    className="ant-form ant-form-inline"
                    id="filters"
                    onReset={[Function]}
                    onSubmit={[Function]}
                    style={
                      Object {
                        "maxWidth": "100%",
                      }
                    }
                  >
                    <InternalFormItem
                      label="Users"
                      name="user_id"
                    >
                      <WrapperField
                        label="Users"
                        messageVariables={
                          Object {
                            "label": "Users",
                          }
                        }
                        name="user_id"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "filters",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFieldValue": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_user_id"
                          label="Users"
                          messageVariables={
                            Object {
                              "label": "Users",
                            }
                          }
                          name={
                            Array [
                              "user_id",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <ItemHolder
                            errors={Array []}
                            fieldId="filters_user_id"
                            isRequired={false}
                            key="row"
                            label="Users"
                            meta={
                              Object {
                                "errors": Array [],
                                "name": Array [],
                                "touched": false,
                                "validating": false,
                                "warnings": Array [],
                              }
                            }
                            name="user_id"
                            onSubItemMetaChange={[Function]}
                            prefixCls="ant-form"
                            warnings={Array []}
                          >
                            <div
                              className="ant-form-item"
                            >
                              <Row
                                className="ant-form-item-row"
                              >
                                <div
                                  className="ant-row ant-form-item-row"
                                  style={Object {}}
                                >
                                  <FormItemLabel
                                    errors={Array []}
                                    fieldId="filters_user_id"
                                    htmlFor="filters_user_id"
                                    isRequired={false}
                                    label="Users"
                                    meta={
                                      Object {
                                        "errors": Array [],
                                        "name": Array [],
                                        "touched": false,
                                        "validating": false,
                                        "warnings": Array [],
                                      }
                                    }
                                    name="user_id"
                                    onSubItemMetaChange={[Function]}
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    warnings={Array []}
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_user_id"
                                          title="Users"
                                        >
                                          Users
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    fieldId="filters_user_id"
                                    isRequired={false}
                                    label="Users"
                                    marginBottom={null}
                                    meta={
                                      Object {
                                        "errors": Array [],
                                        "name": Array [],
                                        "touched": false,
                                        "validating": false,
                                        "warnings": Array [],
                                      }
                                    }
                                    name={Array []}
                                    onErrorVisibleChanged={[Function]}
                                    onSubItemMetaChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    touched={false}
                                    validating={false}
                                    warnings={Array []}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              childProps={
                                                Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ]
                                              }
                                              update={
                                                <ForwardRef(InternalSelect)
                                                  bordered={true}
                                                  listHeight={128}
                                                  placeholder="select user"
                                                  style={
                                                    Object {
                                                      "width": 200,
                                                    }
                                                  }
                                                />
                                              }
                                            >
                                              <ForwardRef(InternalSelect)
                                                bordered={true}
                                                id="filters_user_id"
                                                listHeight={128}
                                                onChange={[Function]}
                                                placeholder="select user"
                                                style={
                                                  Object {
                                                    "width": 200,
                                                  }
                                                }
                                              >
                                                <Select
                                                  className="ant-select-in-form-item"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  disabled={false}
                                                  dropdownClassName=""
                                                  id="filters_user_id"
                                                  inputIcon={[Function]}
                                                  listHeight={128}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  placeholder="select user"
                                                  placement="bottomLeft"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  style={
                                                    Object {
                                                      "width": 200,
                                                    }
                                                  }
                                                  transitionName="ant-slide-up"
                                                >
                                                  <BaseSelect
                                                    OptionList={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "OptionList",
                                                        "render": [Function],
                                                      }
                                                    }
                                                    activeDescendantId="filters_user_id_list_0"
                                                    activeValue={null}
                                                    autoClearSearchValue={true}
                                                    className="ant-select-in-form-item"
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    disabled={false}
                                                    displayValues={Array []}
                                                    dropdownClassName=""
                                                    dropdownMatchSelectWidth={true}
                                                    emptyOptions={true}
                                                    id="filters_user_id"
                                                    inputIcon={[Function]}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    omitDomProps={
                                                      Array [
                                                        "inputValue",
                                                      ]
                                                    }
                                                    onDisplayValuesChange={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSplit={[Function]}
                                                    placeholder="select user"
                                                    placement="bottomLeft"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    style={
                                                      Object {
                                                        "width": 200,
                                                      }
                                                    }
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <div
                                                      className="ant-select ant-select-in-form-item ant-select-single ant-select-show-arrow"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "width": 200,
                                                        }
                                                      }
                                                    >
                                                      <SelectTrigger
                                                        containerWidth={null}
                                                        disabled={false}
                                                        dropdownClassName=""
                                                        dropdownMatchSelectWidth={true}
                                                        empty={true}
                                                        getTriggerDOMNode={[Function]}
                                                        onPopupMouseEnter={[Function]}
                                                        placement="bottomLeft"
                                                        popupElement={<ForwardRef(OptionList) />}
                                                        prefixCls="ant-select"
                                                        transitionName="ant-slide-up"
                                                      >
                                                        <Trigger
                                                          action={Array []}
                                                          afterPopupVisibleChange={[Function]}
                                                          autoDestroy={false}
                                                          blurDelay={0.15}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottomLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          defaultPopupVisible={false}
                                                          destroyPopupOnHide={false}
                                                          focusDelay={0}
                                                          getDocument={[Function]}
                                                          getPopupClassNameFromAlign={[Function]}
                                                          getTriggerDOMNode={[Function]}
                                                          hideAction={Array []}
                                                          mask={false}
                                                          maskClosable={true}
                                                          mouseEnterDelay={0}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onPopupVisibleChange={[Function]}
                                                          popup={
                                                            <div
                                                              onMouseEnter={[Function]}
                                                            >
                                                              <ForwardRef(OptionList) />
                                                            </div>
                                                          }
                                                          popupAlign={Object {}}
                                                          popupClassName="ant-select-dropdown-empty"
                                                          popupPlacement="bottomLeft"
                                                          popupStyle={
                                                            Object {
                                                              "minWidth": null,
                                                              "width": null,
                                                            }
                                                          }
                                                          popupTransitionName="ant-slide-up"
                                                          prefixCls="ant-select-dropdown"
                                                          showAction={Array []}
                                                        >
                                                          <Selector
                                                            OptionList={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "OptionList",
                                                                "render": [Function],
                                                              }
                                                            }
                                                            activeDescendantId="filters_user_id_list_0"
                                                            activeValue={null}
                                                            autoClearSearchValue={true}
                                                            className="ant-select-in-form-item"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            disabled={false}
                                                            displayValues={Array []}
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_user_id"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-placeholder"
                                                                  >
                                                                    select user
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            dropdownMatchSelectWidth={true}
                                                            emptyOptions={true}
                                                            id="filters_user_id"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            key="trigger"
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            omitDomProps={
                                                              Array [
                                                                "inputValue",
                                                              ]
                                                            }
                                                            onDisplayValuesChange={[Function]}
                                                            onRemove={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSplit={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placeholder="select user"
                                                            placement="bottomLeft"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            style={
                                                              Object {
                                                                "width": 200,
                                                              }
                                                            }
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            values={Array []}
                                                          >
                                                            <div
                                                              className="ant-select-selector"
                                                              onClick={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SingleSelector
                                                                OptionList={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "OptionList",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                activeDescendantId="filters_user_id_list_0"
                                                                activeValue={null}
                                                                autoClearSearchValue={true}
                                                                className="ant-select-in-form-item"
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                disabled={false}
                                                                displayValues={Array []}
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="filters_user_id_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="filters_user_id_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="filters_user_id_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="filters_user_id"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          type="search"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-placeholder"
                                                                      >
                                                                        select user
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                dropdownMatchSelectWidth={true}
                                                                emptyOptions={true}
                                                                id="filters_user_id"
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                inputRef={
                                                                  Object {
                                                                    "current": <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_user_id"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />,
                                                                  }
                                                                }
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                omitDomProps={
                                                                  Array [
                                                                    "inputValue",
                                                                  ]
                                                                }
                                                                onDisplayValuesChange={[Function]}
                                                                onInputChange={[Function]}
                                                                onInputCompositionEnd={[Function]}
                                                                onInputCompositionStart={[Function]}
                                                                onInputKeyDown={[Function]}
                                                                onInputMouseDown={[Function]}
                                                                onInputPaste={[Function]}
                                                                onRemove={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSplit={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="select user"
                                                                placement="bottomLeft"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={false}
                                                                style={
                                                                  Object {
                                                                    "width": 200,
                                                                  }
                                                                }
                                                                tokenWithEnter={false}
                                                                transitionName="ant-slide-up"
                                                                values={Array []}
                                                              >
                                                                <span
                                                                  className="ant-select-selection-search"
                                                                >
                                                                  <Input
                                                                    activeDescendantId="filters_user_id_list_0"
                                                                    attrs={Object {}}
                                                                    disabled={false}
                                                                    editable={false}
                                                                    id="filters_user_id"
                                                                    inputElement={null}
                                                                    onChange={[Function]}
                                                                    onCompositionEnd={[Function]}
                                                                    onCompositionStart={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onPaste={[Function]}
                                                                    prefixCls="ant-select"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autoComplete="off"
                                                                      className="ant-select-selection-search-input"
                                                                      disabled={false}
                                                                      id="filters_user_id"
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      readOnly={true}
                                                                      role="combobox"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0,
                                                                        }
                                                                      }
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </span>
                                                                <span
                                                                  className="ant-select-selection-placeholder"
                                                                >
                                                                  select user
                                                                </span>
                                                              </SingleSelector>
                                                            </div>
                                                          </Selector>
                                                        </Trigger>
                                                      </SelectTrigger>
                                                      <TransBtn
                                                        className="ant-select-arrow"
                                                        customizeIcon={[Function]}
                                                        customizeIconProps={
                                                          Object {
                                                            "focused": false,
                                                            "loading": undefined,
                                                            "open": undefined,
                                                            "searchValue": "",
                                                            "showSearch": false,
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-arrow"
                                                          onMouseDown={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitUserSelect": "none",
                                                              "userSelect": "none",
                                                            }
                                                          }
                                                          unselectable="on"
                                                        >
                                                          <ForwardRef(DownOutlined)
                                                            className="ant-select-suffix"
                                                          >
                                                            <AntdIcon
                                                              className="ant-select-suffix"
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="down"
                                                                className="anticon anticon-down ant-select-suffix"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "down",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    data-icon="down"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-down"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                      key="svg-down-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(DownOutlined)>
                                                        </span>
                                                      </TransBtn>
                                                    </div>
                                                  </BaseSelect>
                                                </Select>
                                              </ForwardRef(InternalSelect)>
                                            </Component>
                                          </div>
                                        </div>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </div>
                          </ItemHolder>
                        </Field>
                      </WrapperField>
                    </InternalFormItem>
                    <InternalFormItem>
                      <ItemHolder
                        errors={Array []}
                        key="row"
                        meta={
                          Object {
                            "errors": Array [],
                            "name": Array [],
                            "touched": false,
                            "validating": false,
                            "warnings": Array [],
                          }
                        }
                        onSubItemMetaChange={[Function]}
                        prefixCls="ant-form"
                        warnings={Array []}
                      >
                        <div
                          className="ant-form-item"
                        >
                          <Row
                            className="ant-form-item-row"
                          >
                            <div
                              className="ant-row ant-form-item-row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                errors={Array []}
                                meta={
                                  Object {
                                    "errors": Array [],
                                    "name": Array [],
                                    "touched": false,
                                    "validating": false,
                                    "warnings": Array [],
                                  }
                                }
                                onSubItemMetaChange={[Function]}
                                prefixCls="ant-form"
                                requiredMark={true}
                                warnings={Array []}
                              />
                              <FormItemInput
                                errors={Array []}
                                marginBottom={null}
                                meta={
                                  Object {
                                    "errors": Array [],
                                    "name": Array [],
                                    "touched": false,
                                    "validating": false,
                                    "warnings": Array [],
                                  }
                                }
                                name={Array []}
                                onErrorVisibleChanged={[Function]}
                                onSubItemMetaChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Button
                                          htmlType="submit"
                                          type="primary"
                                        >
                                          <Wave
                                            disabled={false}
                                          >
                                            <button
                                              className="ant-btn ant-btn-primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Add Space User
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </div>
                                    </div>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </div>
                      </ItemHolder>
                    </InternalFormItem>
                  </form>
                </ForwardRef(Form)>
              </SizeContextProvider>
            </DisabledContextProvider>
          </ForwardRef(InternalForm)>
          <mockConstructor
            role="admin"
            spaceID={1}
          >
            <div
              id="userList"
              role="admin"
              spaceID={1}
            />
          </mockConstructor>
        </div>
      </SpaceUser>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Space Users component should render correcty when loadingspace and loadingapps is false 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <SpaceUser>
        <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "gap": "20px",
            }
          }
        >
          <Link
            key="1"
            to="/applications/1/settings/spaces/1/settings"
          >
            <LinkAnchor
              href="/applications/1/settings/spaces/1/settings"
              navigate={[Function]}
            >
              <a
                href="/applications/1/settings/spaces/1/settings"
                onClick={[Function]}
              >
                <Button
                  type="primary"
                >
                  <Wave
                    disabled={false}
                  >
                    <button
                      className="ant-btn ant-btn-primary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <LoadingIcon
                        existIcon={false}
                        loading={false}
                        prefixCls="ant-btn"
                      >
                        <CSSMotion
                          motionName="ant-btn-loading-icon-motion"
                          onAppearActive={[Function]}
                          onAppearStart={[Function]}
                          onEnterActive={[Function]}
                          onEnterStart={[Function]}
                          onLeaveActive={[Function]}
                          onLeaveStart={[Function]}
                          removeOnLeave={true}
                          visible={false}
                        >
                          <DomWrapper />
                        </CSSMotion>
                      </LoadingIcon>
                      <span
                        key=".0"
                      >
                         Back to Settings 
                      </span>
                    </button>
                  </Wave>
                </Button>
              </a>
            </LinkAnchor>
          </Link>
          <ForwardRef(InternalForm)
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "filters",
                },
                "_init": true,
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldWarning": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFieldValue": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            layout="inline"
            name="filters"
            onFinish={[Function]}
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          >
            <DisabledContextProvider
              disabled={false}
            >
              <SizeContextProvider>
                <ForwardRef(Form)
                  className="ant-form ant-form-inline"
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "filters",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFieldValue": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  id="filters"
                  name="filters"
                  onFinish={[Function]}
                  onFinishFailed={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <form
                    className="ant-form ant-form-inline"
                    id="filters"
                    onReset={[Function]}
                    onSubmit={[Function]}
                    style={
                      Object {
                        "maxWidth": "100%",
                      }
                    }
                  >
                    <InternalFormItem
                      label="Users"
                      name="user_id"
                    >
                      <WrapperField
                        label="Users"
                        messageVariables={
                          Object {
                            "label": "Users",
                          }
                        }
                        name="user_id"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "filters",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFieldValue": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_user_id"
                          label="Users"
                          messageVariables={
                            Object {
                              "label": "Users",
                            }
                          }
                          name={
                            Array [
                              "user_id",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <ItemHolder
                            errors={Array []}
                            fieldId="filters_user_id"
                            isRequired={false}
                            key="row"
                            label="Users"
                            meta={
                              Object {
                                "errors": Array [],
                                "name": Array [],
                                "touched": false,
                                "validating": false,
                                "warnings": Array [],
                              }
                            }
                            name="user_id"
                            onSubItemMetaChange={[Function]}
                            prefixCls="ant-form"
                            warnings={Array []}
                          >
                            <div
                              className="ant-form-item"
                            >
                              <Row
                                className="ant-form-item-row"
                              >
                                <div
                                  className="ant-row ant-form-item-row"
                                  style={Object {}}
                                >
                                  <FormItemLabel
                                    errors={Array []}
                                    fieldId="filters_user_id"
                                    htmlFor="filters_user_id"
                                    isRequired={false}
                                    label="Users"
                                    meta={
                                      Object {
                                        "errors": Array [],
                                        "name": Array [],
                                        "touched": false,
                                        "validating": false,
                                        "warnings": Array [],
                                      }
                                    }
                                    name="user_id"
                                    onSubItemMetaChange={[Function]}
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    warnings={Array []}
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_user_id"
                                          title="Users"
                                        >
                                          Users
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    fieldId="filters_user_id"
                                    isRequired={false}
                                    label="Users"
                                    marginBottom={null}
                                    meta={
                                      Object {
                                        "errors": Array [],
                                        "name": Array [],
                                        "touched": false,
                                        "validating": false,
                                        "warnings": Array [],
                                      }
                                    }
                                    name={Array []}
                                    onErrorVisibleChanged={[Function]}
                                    onSubItemMetaChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    touched={false}
                                    validating={false}
                                    warnings={Array []}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              childProps={
                                                Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ]
                                              }
                                              update={
                                                <ForwardRef(InternalSelect)
                                                  bordered={true}
                                                  listHeight={128}
                                                  placeholder="select user"
                                                  style={
                                                    Object {
                                                      "width": 200,
                                                    }
                                                  }
                                                >
                                                  <Option
                                                    value={3}
                                                  >
                                                    user3@gmail.com
                                                  </Option>
                                                  <Option
                                                    value={4}
                                                  >
                                                    user4@gmail.com
                                                  </Option>
                                                </ForwardRef(InternalSelect)>
                                              }
                                            >
                                              <ForwardRef(InternalSelect)
                                                bordered={true}
                                                id="filters_user_id"
                                                listHeight={128}
                                                onChange={[Function]}
                                                placeholder="select user"
                                                style={
                                                  Object {
                                                    "width": 200,
                                                  }
                                                }
                                              >
                                                <Select
                                                  className="ant-select-in-form-item"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  disabled={false}
                                                  dropdownClassName=""
                                                  id="filters_user_id"
                                                  inputIcon={[Function]}
                                                  listHeight={128}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  placeholder="select user"
                                                  placement="bottomLeft"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  style={
                                                    Object {
                                                      "width": 200,
                                                    }
                                                  }
                                                  transitionName="ant-slide-up"
                                                >
                                                  <BaseSelect
                                                    OptionList={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "OptionList",
                                                        "render": [Function],
                                                      }
                                                    }
                                                    activeDescendantId="filters_user_id_list_0"
                                                    activeValue={null}
                                                    autoClearSearchValue={true}
                                                    className="ant-select-in-form-item"
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    disabled={false}
                                                    displayValues={Array []}
                                                    dropdownClassName=""
                                                    dropdownMatchSelectWidth={true}
                                                    emptyOptions={false}
                                                    id="filters_user_id"
                                                    inputIcon={[Function]}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    omitDomProps={
                                                      Array [
                                                        "inputValue",
                                                      ]
                                                    }
                                                    onDisplayValuesChange={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSplit={[Function]}
                                                    placeholder="select user"
                                                    placement="bottomLeft"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    style={
                                                      Object {
                                                        "width": 200,
                                                      }
                                                    }
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <div
                                                      className="ant-select ant-select-in-form-item ant-select-single ant-select-show-arrow"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "width": 200,
                                                        }
                                                      }
                                                    >
                                                      <SelectTrigger
                                                        containerWidth={null}
                                                        disabled={false}
                                                        dropdownClassName=""
                                                        dropdownMatchSelectWidth={true}
                                                        empty={false}
                                                        getTriggerDOMNode={[Function]}
                                                        onPopupMouseEnter={[Function]}
                                                        placement="bottomLeft"
                                                        popupElement={<ForwardRef(OptionList) />}
                                                        prefixCls="ant-select"
                                                        transitionName="ant-slide-up"
                                                      >
                                                        <Trigger
                                                          action={Array []}
                                                          afterPopupVisibleChange={[Function]}
                                                          autoDestroy={false}
                                                          blurDelay={0.15}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottomLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          defaultPopupVisible={false}
                                                          destroyPopupOnHide={false}
                                                          focusDelay={0}
                                                          getDocument={[Function]}
                                                          getPopupClassNameFromAlign={[Function]}
                                                          getTriggerDOMNode={[Function]}
                                                          hideAction={Array []}
                                                          mask={false}
                                                          maskClosable={true}
                                                          mouseEnterDelay={0}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onPopupVisibleChange={[Function]}
                                                          popup={
                                                            <div
                                                              onMouseEnter={[Function]}
                                                            >
                                                              <ForwardRef(OptionList) />
                                                            </div>
                                                          }
                                                          popupAlign={Object {}}
                                                          popupClassName=""
                                                          popupPlacement="bottomLeft"
                                                          popupStyle={
                                                            Object {
                                                              "minWidth": null,
                                                              "width": null,
                                                            }
                                                          }
                                                          popupTransitionName="ant-slide-up"
                                                          prefixCls="ant-select-dropdown"
                                                          showAction={Array []}
                                                        >
                                                          <Selector
                                                            OptionList={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "OptionList",
                                                                "render": [Function],
                                                              }
                                                            }
                                                            activeDescendantId="filters_user_id_list_0"
                                                            activeValue={null}
                                                            autoClearSearchValue={true}
                                                            className="ant-select-in-form-item"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            disabled={false}
                                                            displayValues={Array []}
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_user_id"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-placeholder"
                                                                  >
                                                                    select user
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            dropdownMatchSelectWidth={true}
                                                            emptyOptions={false}
                                                            id="filters_user_id"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            key="trigger"
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            omitDomProps={
                                                              Array [
                                                                "inputValue",
                                                              ]
                                                            }
                                                            onDisplayValuesChange={[Function]}
                                                            onRemove={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSplit={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placeholder="select user"
                                                            placement="bottomLeft"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            style={
                                                              Object {
                                                                "width": 200,
                                                              }
                                                            }
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            values={Array []}
                                                          >
                                                            <div
                                                              className="ant-select-selector"
                                                              onClick={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SingleSelector
                                                                OptionList={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "OptionList",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                activeDescendantId="filters_user_id_list_0"
                                                                activeValue={null}
                                                                autoClearSearchValue={true}
                                                                className="ant-select-in-form-item"
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                disabled={false}
                                                                displayValues={Array []}
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="filters_user_id_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="filters_user_id_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="filters_user_id_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="filters_user_id"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          type="search"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-placeholder"
                                                                      >
                                                                        select user
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                dropdownMatchSelectWidth={true}
                                                                emptyOptions={false}
                                                                id="filters_user_id"
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                inputRef={
                                                                  Object {
                                                                    "current": <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_user_id"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />,
                                                                  }
                                                                }
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                omitDomProps={
                                                                  Array [
                                                                    "inputValue",
                                                                  ]
                                                                }
                                                                onDisplayValuesChange={[Function]}
                                                                onInputChange={[Function]}
                                                                onInputCompositionEnd={[Function]}
                                                                onInputCompositionStart={[Function]}
                                                                onInputKeyDown={[Function]}
                                                                onInputMouseDown={[Function]}
                                                                onInputPaste={[Function]}
                                                                onRemove={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSplit={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="select user"
                                                                placement="bottomLeft"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={false}
                                                                style={
                                                                  Object {
                                                                    "width": 200,
                                                                  }
                                                                }
                                                                tokenWithEnter={false}
                                                                transitionName="ant-slide-up"
                                                                values={Array []}
                                                              >
                                                                <span
                                                                  className="ant-select-selection-search"
                                                                >
                                                                  <Input
                                                                    activeDescendantId="filters_user_id_list_0"
                                                                    attrs={Object {}}
                                                                    disabled={false}
                                                                    editable={false}
                                                                    id="filters_user_id"
                                                                    inputElement={null}
                                                                    onChange={[Function]}
                                                                    onCompositionEnd={[Function]}
                                                                    onCompositionStart={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onPaste={[Function]}
                                                                    prefixCls="ant-select"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autoComplete="off"
                                                                      className="ant-select-selection-search-input"
                                                                      disabled={false}
                                                                      id="filters_user_id"
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      readOnly={true}
                                                                      role="combobox"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0,
                                                                        }
                                                                      }
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </span>
                                                                <span
                                                                  className="ant-select-selection-placeholder"
                                                                >
                                                                  select user
                                                                </span>
                                                              </SingleSelector>
                                                            </div>
                                                          </Selector>
                                                        </Trigger>
                                                      </SelectTrigger>
                                                      <TransBtn
                                                        className="ant-select-arrow"
                                                        customizeIcon={[Function]}
                                                        customizeIconProps={
                                                          Object {
                                                            "focused": false,
                                                            "loading": undefined,
                                                            "open": undefined,
                                                            "searchValue": "",
                                                            "showSearch": false,
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-arrow"
                                                          onMouseDown={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitUserSelect": "none",
                                                              "userSelect": "none",
                                                            }
                                                          }
                                                          unselectable="on"
                                                        >
                                                          <ForwardRef(DownOutlined)
                                                            className="ant-select-suffix"
                                                          >
                                                            <AntdIcon
                                                              className="ant-select-suffix"
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="down"
                                                                className="anticon anticon-down ant-select-suffix"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "down",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    data-icon="down"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-down"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                      key="svg-down-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(DownOutlined)>
                                                        </span>
                                                      </TransBtn>
                                                    </div>
                                                  </BaseSelect>
                                                </Select>
                                              </ForwardRef(InternalSelect)>
                                            </Component>
                                          </div>
                                        </div>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </div>
                          </ItemHolder>
                        </Field>
                      </WrapperField>
                    </InternalFormItem>
                    <InternalFormItem>
                      <ItemHolder
                        errors={Array []}
                        key="row"
                        meta={
                          Object {
                            "errors": Array [],
                            "name": Array [],
                            "touched": false,
                            "validating": false,
                            "warnings": Array [],
                          }
                        }
                        onSubItemMetaChange={[Function]}
                        prefixCls="ant-form"
                        warnings={Array []}
                      >
                        <div
                          className="ant-form-item"
                        >
                          <Row
                            className="ant-form-item-row"
                          >
                            <div
                              className="ant-row ant-form-item-row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                errors={Array []}
                                meta={
                                  Object {
                                    "errors": Array [],
                                    "name": Array [],
                                    "touched": false,
                                    "validating": false,
                                    "warnings": Array [],
                                  }
                                }
                                onSubItemMetaChange={[Function]}
                                prefixCls="ant-form"
                                requiredMark={true}
                                warnings={Array []}
                              />
                              <FormItemInput
                                errors={Array []}
                                marginBottom={null}
                                meta={
                                  Object {
                                    "errors": Array [],
                                    "name": Array [],
                                    "touched": false,
                                    "validating": false,
                                    "warnings": Array [],
                                  }
                                }
                                name={Array []}
                                onErrorVisibleChanged={[Function]}
                                onSubItemMetaChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Button
                                          htmlType="submit"
                                          type="primary"
                                        >
                                          <Wave
                                            disabled={false}
                                          >
                                            <button
                                              className="ant-btn ant-btn-primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Add Space User
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </div>
                                    </div>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </div>
                      </ItemHolder>
                    </InternalFormItem>
                  </form>
                </ForwardRef(Form)>
              </SizeContextProvider>
            </DisabledContextProvider>
          </ForwardRef(InternalForm)>
          <mockConstructor
            role="admin"
            spaceID={1}
          >
            <div
              id="userList"
              role="admin"
              spaceID={1}
            />
          </mockConstructor>
        </div>
      </SpaceUser>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Space Users component should render correcty when loadingspace is true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <SpaceUser>
        <div
          style={
            Object {
              "display": "flex",
              "flexDirection": "column",
              "gap": "20px",
            }
          }
        >
          <Link
            key="1"
            to="/applications/1/settings/spaces/1/settings"
          >
            <LinkAnchor
              href="/applications/1/settings/spaces/1/settings"
              navigate={[Function]}
            >
              <a
                href="/applications/1/settings/spaces/1/settings"
                onClick={[Function]}
              >
                <Button
                  type="primary"
                >
                  <Wave
                    disabled={false}
                  >
                    <button
                      className="ant-btn ant-btn-primary"
                      disabled={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <LoadingIcon
                        existIcon={false}
                        loading={false}
                        prefixCls="ant-btn"
                      >
                        <CSSMotion
                          motionName="ant-btn-loading-icon-motion"
                          onAppearActive={[Function]}
                          onAppearStart={[Function]}
                          onEnterActive={[Function]}
                          onEnterStart={[Function]}
                          onLeaveActive={[Function]}
                          onLeaveStart={[Function]}
                          removeOnLeave={true}
                          visible={false}
                        >
                          <DomWrapper />
                        </CSSMotion>
                      </LoadingIcon>
                      <span
                        key=".0"
                      >
                         Back to Settings 
                      </span>
                    </button>
                  </Wave>
                </Button>
              </a>
            </LinkAnchor>
          </Link>
          <ForwardRef(InternalForm)
            form={
              Object {
                "__INTERNAL__": Object {
                  "itemRef": [Function],
                  "name": "filters",
                },
                "_init": true,
                "getFieldError": [Function],
                "getFieldInstance": [Function],
                "getFieldValue": [Function],
                "getFieldWarning": [Function],
                "getFieldsError": [Function],
                "getFieldsValue": [Function],
                "getInternalHooks": [Function],
                "isFieldTouched": [Function],
                "isFieldValidating": [Function],
                "isFieldsTouched": [Function],
                "isFieldsValidating": [Function],
                "resetFields": [Function],
                "scrollToField": [Function],
                "setFieldValue": [Function],
                "setFields": [Function],
                "setFieldsValue": [Function],
                "submit": [Function],
                "validateFields": [Function],
              }
            }
            layout="inline"
            name="filters"
            onFinish={[Function]}
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          >
            <DisabledContextProvider
              disabled={false}
            >
              <SizeContextProvider>
                <ForwardRef(Form)
                  className="ant-form ant-form-inline"
                  form={
                    Object {
                      "__INTERNAL__": Object {
                        "itemRef": [Function],
                        "name": "filters",
                      },
                      "_init": true,
                      "getFieldError": [Function],
                      "getFieldInstance": [Function],
                      "getFieldValue": [Function],
                      "getFieldWarning": [Function],
                      "getFieldsError": [Function],
                      "getFieldsValue": [Function],
                      "getInternalHooks": [Function],
                      "isFieldTouched": [Function],
                      "isFieldValidating": [Function],
                      "isFieldsTouched": [Function],
                      "isFieldsValidating": [Function],
                      "resetFields": [Function],
                      "scrollToField": [Function],
                      "setFieldValue": [Function],
                      "setFields": [Function],
                      "setFieldsValue": [Function],
                      "submit": [Function],
                      "validateFields": [Function],
                    }
                  }
                  id="filters"
                  name="filters"
                  onFinish={[Function]}
                  onFinishFailed={[Function]}
                  style={
                    Object {
                      "maxWidth": "100%",
                    }
                  }
                >
                  <form
                    className="ant-form ant-form-inline"
                    id="filters"
                    onReset={[Function]}
                    onSubmit={[Function]}
                    style={
                      Object {
                        "maxWidth": "100%",
                      }
                    }
                  >
                    <InternalFormItem
                      label="Users"
                      name="user_id"
                    >
                      <WrapperField
                        label="Users"
                        messageVariables={
                          Object {
                            "label": "Users",
                          }
                        }
                        name="user_id"
                        onMetaChange={[Function]}
                        trigger="onChange"
                        validateTrigger="onChange"
                      >
                        <Field
                          fieldContext={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": "filters",
                              },
                              "_init": true,
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldWarning": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFieldValue": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                              "validateTrigger": "onChange",
                            }
                          }
                          key="_user_id"
                          label="Users"
                          messageVariables={
                            Object {
                              "label": "Users",
                            }
                          }
                          name={
                            Array [
                              "user_id",
                            ]
                          }
                          onMetaChange={[Function]}
                          trigger="onChange"
                          validateTrigger="onChange"
                          valuePropName="value"
                        >
                          <ItemHolder
                            errors={Array []}
                            fieldId="filters_user_id"
                            isRequired={false}
                            key="row"
                            label="Users"
                            meta={
                              Object {
                                "errors": Array [],
                                "name": Array [],
                                "touched": false,
                                "validating": false,
                                "warnings": Array [],
                              }
                            }
                            name="user_id"
                            onSubItemMetaChange={[Function]}
                            prefixCls="ant-form"
                            warnings={Array []}
                          >
                            <div
                              className="ant-form-item"
                            >
                              <Row
                                className="ant-form-item-row"
                              >
                                <div
                                  className="ant-row ant-form-item-row"
                                  style={Object {}}
                                >
                                  <FormItemLabel
                                    errors={Array []}
                                    fieldId="filters_user_id"
                                    htmlFor="filters_user_id"
                                    isRequired={false}
                                    label="Users"
                                    meta={
                                      Object {
                                        "errors": Array [],
                                        "name": Array [],
                                        "touched": false,
                                        "validating": false,
                                        "warnings": Array [],
                                      }
                                    }
                                    name="user_id"
                                    onSubItemMetaChange={[Function]}
                                    prefixCls="ant-form"
                                    required={false}
                                    requiredMark={true}
                                    warnings={Array []}
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          htmlFor="filters_user_id"
                                          title="Users"
                                        >
                                          Users
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    fieldId="filters_user_id"
                                    isRequired={false}
                                    label="Users"
                                    marginBottom={null}
                                    meta={
                                      Object {
                                        "errors": Array [],
                                        "name": Array [],
                                        "touched": false,
                                        "validating": false,
                                        "warnings": Array [],
                                      }
                                    }
                                    name={Array []}
                                    onErrorVisibleChanged={[Function]}
                                    onSubItemMetaChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    touched={false}
                                    validating={false}
                                    warnings={Array []}
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Component
                                              childProps={
                                                Array [
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                ]
                                              }
                                              update={
                                                <ForwardRef(InternalSelect)
                                                  bordered={true}
                                                  listHeight={128}
                                                  placeholder="select user"
                                                  style={
                                                    Object {
                                                      "width": 200,
                                                    }
                                                  }
                                                />
                                              }
                                            >
                                              <ForwardRef(InternalSelect)
                                                bordered={true}
                                                id="filters_user_id"
                                                listHeight={128}
                                                onChange={[Function]}
                                                placeholder="select user"
                                                style={
                                                  Object {
                                                    "width": 200,
                                                  }
                                                }
                                              >
                                                <Select
                                                  className="ant-select-in-form-item"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  disabled={false}
                                                  dropdownClassName=""
                                                  id="filters_user_id"
                                                  inputIcon={[Function]}
                                                  listHeight={128}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  notFoundContent={
                                                    <Context.Consumer>
                                                      [Function]
                                                    </Context.Consumer>
                                                  }
                                                  onChange={[Function]}
                                                  placeholder="select user"
                                                  placement="bottomLeft"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  style={
                                                    Object {
                                                      "width": 200,
                                                    }
                                                  }
                                                  transitionName="ant-slide-up"
                                                >
                                                  <BaseSelect
                                                    OptionList={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "displayName": "OptionList",
                                                        "render": [Function],
                                                      }
                                                    }
                                                    activeDescendantId="filters_user_id_list_0"
                                                    activeValue={null}
                                                    autoClearSearchValue={true}
                                                    className="ant-select-in-form-item"
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    disabled={false}
                                                    displayValues={Array []}
                                                    dropdownClassName=""
                                                    dropdownMatchSelectWidth={true}
                                                    emptyOptions={true}
                                                    id="filters_user_id"
                                                    inputIcon={[Function]}
                                                    notFoundContent={
                                                      <Context.Consumer>
                                                        [Function]
                                                      </Context.Consumer>
                                                    }
                                                    omitDomProps={
                                                      Array [
                                                        "inputValue",
                                                      ]
                                                    }
                                                    onDisplayValuesChange={[Function]}
                                                    onSearch={[Function]}
                                                    onSearchSplit={[Function]}
                                                    placeholder="select user"
                                                    placement="bottomLeft"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    searchValue=""
                                                    style={
                                                      Object {
                                                        "width": 200,
                                                      }
                                                    }
                                                    transitionName="ant-slide-up"
                                                  >
                                                    <div
                                                      className="ant-select ant-select-in-form-item ant-select-single ant-select-show-arrow"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      style={
                                                        Object {
                                                          "width": 200,
                                                        }
                                                      }
                                                    >
                                                      <SelectTrigger
                                                        containerWidth={null}
                                                        disabled={false}
                                                        dropdownClassName=""
                                                        dropdownMatchSelectWidth={true}
                                                        empty={true}
                                                        getTriggerDOMNode={[Function]}
                                                        onPopupMouseEnter={[Function]}
                                                        placement="bottomLeft"
                                                        popupElement={<ForwardRef(OptionList) />}
                                                        prefixCls="ant-select"
                                                        transitionName="ant-slide-up"
                                                      >
                                                        <Trigger
                                                          action={Array []}
                                                          afterPopupVisibleChange={[Function]}
                                                          autoDestroy={false}
                                                          blurDelay={0.15}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottomLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          defaultPopupVisible={false}
                                                          destroyPopupOnHide={false}
                                                          focusDelay={0}
                                                          getDocument={[Function]}
                                                          getPopupClassNameFromAlign={[Function]}
                                                          getTriggerDOMNode={[Function]}
                                                          hideAction={Array []}
                                                          mask={false}
                                                          maskClosable={true}
                                                          mouseEnterDelay={0}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onPopupVisibleChange={[Function]}
                                                          popup={
                                                            <div
                                                              onMouseEnter={[Function]}
                                                            >
                                                              <ForwardRef(OptionList) />
                                                            </div>
                                                          }
                                                          popupAlign={Object {}}
                                                          popupClassName="ant-select-dropdown-empty"
                                                          popupPlacement="bottomLeft"
                                                          popupStyle={
                                                            Object {
                                                              "minWidth": null,
                                                              "width": null,
                                                            }
                                                          }
                                                          popupTransitionName="ant-slide-up"
                                                          prefixCls="ant-select-dropdown"
                                                          showAction={Array []}
                                                        >
                                                          <Selector
                                                            OptionList={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "displayName": "OptionList",
                                                                "render": [Function],
                                                              }
                                                            }
                                                            activeDescendantId="filters_user_id_list_0"
                                                            activeValue={null}
                                                            autoClearSearchValue={true}
                                                            className="ant-select-in-form-item"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            disabled={false}
                                                            displayValues={Array []}
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_user_id"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-placeholder"
                                                                  >
                                                                    select user
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            dropdownMatchSelectWidth={true}
                                                            emptyOptions={true}
                                                            id="filters_user_id"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            key="trigger"
                                                            notFoundContent={
                                                              <Context.Consumer>
                                                                [Function]
                                                              </Context.Consumer>
                                                            }
                                                            omitDomProps={
                                                              Array [
                                                                "inputValue",
                                                              ]
                                                            }
                                                            onDisplayValuesChange={[Function]}
                                                            onRemove={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSplit={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placeholder="select user"
                                                            placement="bottomLeft"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={false}
                                                            style={
                                                              Object {
                                                                "width": 200,
                                                              }
                                                            }
                                                            tokenWithEnter={false}
                                                            transitionName="ant-slide-up"
                                                            values={Array []}
                                                          >
                                                            <div
                                                              className="ant-select-selector"
                                                              onClick={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SingleSelector
                                                                OptionList={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "OptionList",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                activeDescendantId="filters_user_id_list_0"
                                                                activeValue={null}
                                                                autoClearSearchValue={true}
                                                                className="ant-select-in-form-item"
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                disabled={false}
                                                                displayValues={Array []}
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="filters_user_id_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="filters_user_id_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="filters_user_id_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="filters_user_id"
                                                                          readonly=""
                                                                          role="combobox"
                                                                          style="opacity: 0;"
                                                                          type="search"
                                                                          unselectable="on"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-placeholder"
                                                                      >
                                                                        select user
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                dropdownMatchSelectWidth={true}
                                                                emptyOptions={true}
                                                                id="filters_user_id"
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                inputRef={
                                                                  Object {
                                                                    "current": <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="filters_user_id"
                                                                      readonly=""
                                                                      role="combobox"
                                                                      style="opacity: 0;"
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />,
                                                                  }
                                                                }
                                                                notFoundContent={
                                                                  <Context.Consumer>
                                                                    [Function]
                                                                  </Context.Consumer>
                                                                }
                                                                omitDomProps={
                                                                  Array [
                                                                    "inputValue",
                                                                  ]
                                                                }
                                                                onDisplayValuesChange={[Function]}
                                                                onInputChange={[Function]}
                                                                onInputCompositionEnd={[Function]}
                                                                onInputCompositionStart={[Function]}
                                                                onInputKeyDown={[Function]}
                                                                onInputMouseDown={[Function]}
                                                                onInputPaste={[Function]}
                                                                onRemove={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSplit={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="select user"
                                                                placement="bottomLeft"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={false}
                                                                style={
                                                                  Object {
                                                                    "width": 200,
                                                                  }
                                                                }
                                                                tokenWithEnter={false}
                                                                transitionName="ant-slide-up"
                                                                values={Array []}
                                                              >
                                                                <span
                                                                  className="ant-select-selection-search"
                                                                >
                                                                  <Input
                                                                    activeDescendantId="filters_user_id_list_0"
                                                                    attrs={Object {}}
                                                                    disabled={false}
                                                                    editable={false}
                                                                    id="filters_user_id"
                                                                    inputElement={null}
                                                                    onChange={[Function]}
                                                                    onCompositionEnd={[Function]}
                                                                    onCompositionStart={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onPaste={[Function]}
                                                                    prefixCls="ant-select"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="filters_user_id_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="filters_user_id_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="filters_user_id_list"
                                                                      autoComplete="off"
                                                                      className="ant-select-selection-search-input"
                                                                      disabled={false}
                                                                      id="filters_user_id"
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      readOnly={true}
                                                                      role="combobox"
                                                                      style={
                                                                        Object {
                                                                          "opacity": 0,
                                                                        }
                                                                      }
                                                                      type="search"
                                                                      unselectable="on"
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </span>
                                                                <span
                                                                  className="ant-select-selection-placeholder"
                                                                >
                                                                  select user
                                                                </span>
                                                              </SingleSelector>
                                                            </div>
                                                          </Selector>
                                                        </Trigger>
                                                      </SelectTrigger>
                                                      <TransBtn
                                                        className="ant-select-arrow"
                                                        customizeIcon={[Function]}
                                                        customizeIconProps={
                                                          Object {
                                                            "focused": false,
                                                            "loading": undefined,
                                                            "open": undefined,
                                                            "searchValue": "",
                                                            "showSearch": false,
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          aria-hidden={true}
                                                          className="ant-select-arrow"
                                                          onMouseDown={[Function]}
                                                          style={
                                                            Object {
                                                              "WebkitUserSelect": "none",
                                                              "userSelect": "none",
                                                            }
                                                          }
                                                          unselectable="on"
                                                        >
                                                          <ForwardRef(DownOutlined)
                                                            className="ant-select-suffix"
                                                          >
                                                            <AntdIcon
                                                              className="ant-select-suffix"
                                                              icon={
                                                                Object {
                                                                  "icon": Object {
                                                                    "attrs": Object {
                                                                      "focusable": "false",
                                                                      "viewBox": "64 64 896 896",
                                                                    },
                                                                    "children": Array [
                                                                      Object {
                                                                        "attrs": Object {
                                                                          "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                        },
                                                                        "tag": "path",
                                                                      },
                                                                    ],
                                                                    "tag": "svg",
                                                                  },
                                                                  "name": "down",
                                                                  "theme": "outlined",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                aria-label="down"
                                                                className="anticon anticon-down ant-select-suffix"
                                                                role="img"
                                                              >
                                                                <IconReact
                                                                  icon={
                                                                    Object {
                                                                      "icon": Object {
                                                                        "attrs": Object {
                                                                          "focusable": "false",
                                                                          "viewBox": "64 64 896 896",
                                                                        },
                                                                        "children": Array [
                                                                          Object {
                                                                            "attrs": Object {
                                                                              "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                            },
                                                                            "tag": "path",
                                                                          },
                                                                        ],
                                                                        "tag": "svg",
                                                                      },
                                                                      "name": "down",
                                                                      "theme": "outlined",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    data-icon="down"
                                                                    fill="currentColor"
                                                                    focusable="false"
                                                                    height="1em"
                                                                    key="svg-down"
                                                                    viewBox="64 64 896 896"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                      key="svg-down-svg-0"
                                                                    />
                                                                  </svg>
                                                                </IconReact>
                                                              </span>
                                                            </AntdIcon>
                                                          </ForwardRef(DownOutlined)>
                                                        </span>
                                                      </TransBtn>
                                                    </div>
                                                  </BaseSelect>
                                                </Select>
                                              </ForwardRef(InternalSelect)>
                                            </Component>
                                          </div>
                                        </div>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </div>
                          </ItemHolder>
                        </Field>
                      </WrapperField>
                    </InternalFormItem>
                    <InternalFormItem>
                      <ItemHolder
                        errors={Array []}
                        key="row"
                        meta={
                          Object {
                            "errors": Array [],
                            "name": Array [],
                            "touched": false,
                            "validating": false,
                            "warnings": Array [],
                          }
                        }
                        onSubItemMetaChange={[Function]}
                        prefixCls="ant-form"
                        warnings={Array []}
                      >
                        <div
                          className="ant-form-item"
                        >
                          <Row
                            className="ant-form-item-row"
                          >
                            <div
                              className="ant-row ant-form-item-row"
                              style={Object {}}
                            >
                              <FormItemLabel
                                errors={Array []}
                                meta={
                                  Object {
                                    "errors": Array [],
                                    "name": Array [],
                                    "touched": false,
                                    "validating": false,
                                    "warnings": Array [],
                                  }
                                }
                                onSubItemMetaChange={[Function]}
                                prefixCls="ant-form"
                                requiredMark={true}
                                warnings={Array []}
                              />
                              <FormItemInput
                                errors={Array []}
                                marginBottom={null}
                                meta={
                                  Object {
                                    "errors": Array [],
                                    "name": Array [],
                                    "touched": false,
                                    "validating": false,
                                    "warnings": Array [],
                                  }
                                }
                                name={Array []}
                                onErrorVisibleChanged={[Function]}
                                onSubItemMetaChange={[Function]}
                                prefixCls="ant-form"
                                status=""
                                touched={false}
                                validating={false}
                                warnings={Array []}
                              >
                                <Col
                                  className="ant-form-item-control"
                                >
                                  <div
                                    className="ant-col ant-form-item-control"
                                    style={Object {}}
                                  >
                                    <div
                                      className="ant-form-item-control-input"
                                    >
                                      <div
                                        className="ant-form-item-control-input-content"
                                      >
                                        <Button
                                          htmlType="submit"
                                          type="primary"
                                        >
                                          <Wave
                                            disabled={false}
                                          >
                                            <button
                                              className="ant-btn ant-btn-primary"
                                              disabled={false}
                                              onClick={[Function]}
                                              type="submit"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                Add Space User
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </div>
                                    </div>
                                  </div>
                                </Col>
                              </FormItemInput>
                            </div>
                          </Row>
                        </div>
                      </ItemHolder>
                    </InternalFormItem>
                  </form>
                </ForwardRef(Form)>
              </SizeContextProvider>
            </DisabledContextProvider>
          </ForwardRef(InternalForm)>
          <mockConstructor
            role="admin"
            spaceID={1}
          >
            <div
              id="userList"
              role="admin"
              spaceID={1}
            />
          </mockConstructor>
        </div>
      </SpaceUser>
    </Router>
  </BrowserRouter>
</Provider>
`;
