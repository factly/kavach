// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Application Detail component snapshots should render correctly when default app is present 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <AddDefaultApplication>
        <div
          style={
            Object {
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <ForwardRef
            style={
              Object {
                "minWidth": 800,
              }
            }
            title="Default Application List"
          >
            <div
              className="ant-card ant-card-bordered"
              style={
                Object {
                  "minWidth": 800,
                }
              }
            >
              <div
                className="ant-card-head"
                style={Object {}}
              >
                <div
                  className="ant-card-head-wrapper"
                >
                  <div
                    className="ant-card-head-title"
                  >
                    Default Application List
                  </div>
                </div>
              </div>
              <div
                className="ant-card-body"
                style={Object {}}
              >
                <List
                  dataSource={
                    Array [
                      Object {
                        "description": "App 1 description",
                        "id": 1,
                        "name": "App 1",
                      },
                      Object {
                        "description": "App 2 description",
                        "id": 2,
                        "name": "App 2",
                      },
                      Object {
                        "description": "App 3 description",
                        "id": 3,
                        "name": "App 3",
                      },
                    ]
                  }
                  itemLayout="horizontal"
                  renderItem={[Function]}
                >
                  <div
                    className="ant-list ant-list-split"
                  >
                    <Spin
                      spinning={false}
                    >
                      <Spin
                        spinPrefixCls="ant-spin"
                        spinning={false}
                      >
                        <div
                          className="ant-spin-nested-loading"
                        >
                          <div
                            className="ant-spin-container"
                            key="container"
                          >
                            <ul
                              className="ant-list-items"
                            >
                              <ForwardRef(InternalItem)>
                                <li
                                  className="ant-list-item"
                                >
                                  <AppItem
                                    appID={1}
                                    checked={true}
                                    description="App 1 description"
                                    name="App 1"
                                  >
                                    <Row
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "display": "flex",
                                          "flexDirection": "row",
                                          "height": "100%",
                                          "justifyContent": "space-between",
                                          "width": "100%",
                                        }
                                      }
                                    >
                                      <div
                                        className="ant-row"
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "display": "flex",
                                            "flexDirection": "row",
                                            "height": "100%",
                                            "justifyContent": "space-between",
                                            "width": "100%",
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "display": "flex",
                                              "flexDirection": "flex-start",
                                              "gap": "16px",
                                            }
                                          }
                                        >
                                          <Avatar
                                            size="large"
                                          >
                                            <span
                                              className="ant-avatar ant-avatar-lg ant-avatar-circle"
                                              style={Object {}}
                                            >
                                              <ResizeObserver
                                                onResize={[Function]}
                                              >
                                                <SingleObserver
                                                  key="rc-observer-key-0"
                                                  onResize={[Function]}
                                                >
                                                  <DomWrapper>
                                                    <span
                                                      className="ant-avatar-string"
                                                      style={
                                                        Object {
                                                          "WebkitTransform": "scale(1) translateX(-50%)",
                                                          "msTransform": "scale(1) translateX(-50%)",
                                                          "transform": "scale(1) translateX(-50%)",
                                                        }
                                                      }
                                                    >
                                                      A
                                                    </span>
                                                  </DomWrapper>
                                                </SingleObserver>
                                              </ResizeObserver>
                                            </span>
                                          </Avatar>
                                          <div
                                            style={
                                              Object {
                                                "display": "flex",
                                                "flexDirection": "column",
                                              }
                                            }
                                          >
                                            <h1>
                                              App 1
                                            </h1>
                                            <p
                                              style={
                                                Object {
                                                  "maxWidth": 600,
                                                }
                                              }
                                            >
                                              App 1 description
                                            </p>
                                          </div>
                                        </div>
                                        <Switch
                                          checked={true}
                                          onClick={[Function]}
                                        >
                                          <Wave
                                            insertExtraNode={true}
                                          >
                                            <Switch
                                              checked={true}
                                              className=""
                                              loadingIcon={
                                                <div
                                                  className="ant-switch-handle"
                                                />
                                              }
                                              onClick={[Function]}
                                              prefixCls="ant-switch"
                                            >
                                              <button
                                                aria-checked={true}
                                                className="ant-switch ant-switch-checked"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="switch"
                                                type="button"
                                              >
                                                <div
                                                  className="ant-switch-handle"
                                                />
                                                <span
                                                  className="ant-switch-inner"
                                                />
                                              </button>
                                            </Switch>
                                          </Wave>
                                        </Switch>
                                      </div>
                                    </Row>
                                  </AppItem>
                                </li>
                              </ForwardRef(InternalItem)>
                              <ForwardRef(InternalItem)>
                                <li
                                  className="ant-list-item"
                                >
                                  <AppItem
                                    appID={2}
                                    checked={true}
                                    description="App 2 description"
                                    name="App 2"
                                  >
                                    <Row
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "display": "flex",
                                          "flexDirection": "row",
                                          "height": "100%",
                                          "justifyContent": "space-between",
                                          "width": "100%",
                                        }
                                      }
                                    >
                                      <div
                                        className="ant-row"
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "display": "flex",
                                            "flexDirection": "row",
                                            "height": "100%",
                                            "justifyContent": "space-between",
                                            "width": "100%",
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "display": "flex",
                                              "flexDirection": "flex-start",
                                              "gap": "16px",
                                            }
                                          }
                                        >
                                          <Avatar
                                            size="large"
                                          >
                                            <span
                                              className="ant-avatar ant-avatar-lg ant-avatar-circle"
                                              style={Object {}}
                                            >
                                              <ResizeObserver
                                                onResize={[Function]}
                                              >
                                                <SingleObserver
                                                  key="rc-observer-key-0"
                                                  onResize={[Function]}
                                                >
                                                  <DomWrapper>
                                                    <span
                                                      className="ant-avatar-string"
                                                      style={
                                                        Object {
                                                          "WebkitTransform": "scale(1) translateX(-50%)",
                                                          "msTransform": "scale(1) translateX(-50%)",
                                                          "transform": "scale(1) translateX(-50%)",
                                                        }
                                                      }
                                                    >
                                                      A
                                                    </span>
                                                  </DomWrapper>
                                                </SingleObserver>
                                              </ResizeObserver>
                                            </span>
                                          </Avatar>
                                          <div
                                            style={
                                              Object {
                                                "display": "flex",
                                                "flexDirection": "column",
                                              }
                                            }
                                          >
                                            <h1>
                                              App 2
                                            </h1>
                                            <p
                                              style={
                                                Object {
                                                  "maxWidth": 600,
                                                }
                                              }
                                            >
                                              App 2 description
                                            </p>
                                          </div>
                                        </div>
                                        <Switch
                                          checked={true}
                                          onClick={[Function]}
                                        >
                                          <Wave
                                            insertExtraNode={true}
                                          >
                                            <Switch
                                              checked={true}
                                              className=""
                                              loadingIcon={
                                                <div
                                                  className="ant-switch-handle"
                                                />
                                              }
                                              onClick={[Function]}
                                              prefixCls="ant-switch"
                                            >
                                              <button
                                                aria-checked={true}
                                                className="ant-switch ant-switch-checked"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="switch"
                                                type="button"
                                              >
                                                <div
                                                  className="ant-switch-handle"
                                                />
                                                <span
                                                  className="ant-switch-inner"
                                                />
                                              </button>
                                            </Switch>
                                          </Wave>
                                        </Switch>
                                      </div>
                                    </Row>
                                  </AppItem>
                                </li>
                              </ForwardRef(InternalItem)>
                              <ForwardRef(InternalItem)>
                                <li
                                  className="ant-list-item"
                                >
                                  <AppItem
                                    appID={3}
                                    checked={false}
                                    description="App 3 description"
                                    name="App 3"
                                  >
                                    <Row
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "display": "flex",
                                          "flexDirection": "row",
                                          "height": "100%",
                                          "justifyContent": "space-between",
                                          "width": "100%",
                                        }
                                      }
                                    >
                                      <div
                                        className="ant-row"
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "display": "flex",
                                            "flexDirection": "row",
                                            "height": "100%",
                                            "justifyContent": "space-between",
                                            "width": "100%",
                                          }
                                        }
                                      >
                                        <div
                                          style={
                                            Object {
                                              "display": "flex",
                                              "flexDirection": "flex-start",
                                              "gap": "16px",
                                            }
                                          }
                                        >
                                          <Avatar
                                            size="large"
                                          >
                                            <span
                                              className="ant-avatar ant-avatar-lg ant-avatar-circle"
                                              style={Object {}}
                                            >
                                              <ResizeObserver
                                                onResize={[Function]}
                                              >
                                                <SingleObserver
                                                  key="rc-observer-key-0"
                                                  onResize={[Function]}
                                                >
                                                  <DomWrapper>
                                                    <span
                                                      className="ant-avatar-string"
                                                      style={
                                                        Object {
                                                          "WebkitTransform": "scale(1) translateX(-50%)",
                                                          "msTransform": "scale(1) translateX(-50%)",
                                                          "transform": "scale(1) translateX(-50%)",
                                                        }
                                                      }
                                                    >
                                                      A
                                                    </span>
                                                  </DomWrapper>
                                                </SingleObserver>
                                              </ResizeObserver>
                                            </span>
                                          </Avatar>
                                          <div
                                            style={
                                              Object {
                                                "display": "flex",
                                                "flexDirection": "column",
                                              }
                                            }
                                          >
                                            <h1>
                                              App 3
                                            </h1>
                                            <p
                                              style={
                                                Object {
                                                  "maxWidth": 600,
                                                }
                                              }
                                            >
                                              App 3 description
                                            </p>
                                          </div>
                                        </div>
                                        <Switch
                                          checked={false}
                                          onClick={[Function]}
                                        >
                                          <Wave
                                            insertExtraNode={true}
                                          >
                                            <Switch
                                              checked={false}
                                              className=""
                                              loadingIcon={
                                                <div
                                                  className="ant-switch-handle"
                                                />
                                              }
                                              onClick={[Function]}
                                              prefixCls="ant-switch"
                                            >
                                              <button
                                                aria-checked={false}
                                                className="ant-switch"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="switch"
                                                type="button"
                                              >
                                                <div
                                                  className="ant-switch-handle"
                                                />
                                                <span
                                                  className="ant-switch-inner"
                                                />
                                              </button>
                                            </Switch>
                                          </Wave>
                                        </Switch>
                                      </div>
                                    </Row>
                                  </AppItem>
                                </li>
                              </ForwardRef(InternalItem)>
                            </ul>
                          </div>
                        </div>
                      </Spin>
                    </Spin>
                  </div>
                </List>
              </div>
            </div>
          </ForwardRef>
        </div>
      </AddDefaultApplication>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Application Detail component snapshots should render correctly when loading app is true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <AddDefaultApplication>
        <div
          style={
            Object {
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <Skeleton>
            <div
              className="ant-skeleton"
            >
              <div
                className="ant-skeleton-content"
              >
                <Title
                  prefixCls="ant-skeleton-title"
                  width="38%"
                >
                  <h3
                    className="ant-skeleton-title"
                    style={
                      Object {
                        "width": "38%",
                      }
                    }
                  />
                </Title>
                <Paragraph
                  prefixCls="ant-skeleton-paragraph"
                  rows={3}
                  width="61%"
                >
                  <ul
                    className="ant-skeleton-paragraph"
                  >
                    <li
                      key="0"
                      style={
                        Object {
                          "width": undefined,
                        }
                      }
                    />
                    <li
                      key="1"
                      style={
                        Object {
                          "width": undefined,
                        }
                      }
                    />
                    <li
                      key="2"
                      style={
                        Object {
                          "width": "61%",
                        }
                      }
                    />
                  </ul>
                </Paragraph>
              </div>
            </div>
          </Skeleton>
        </div>
      </AddDefaultApplication>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Application Detail component snapshots should render correctly when loading default app is true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <AddDefaultApplication>
        <div
          style={
            Object {
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <Skeleton>
            <div
              className="ant-skeleton"
            >
              <div
                className="ant-skeleton-content"
              >
                <Title
                  prefixCls="ant-skeleton-title"
                  width="38%"
                >
                  <h3
                    className="ant-skeleton-title"
                    style={
                      Object {
                        "width": "38%",
                      }
                    }
                  />
                </Title>
                <Paragraph
                  prefixCls="ant-skeleton-paragraph"
                  rows={3}
                  width="61%"
                >
                  <ul
                    className="ant-skeleton-paragraph"
                  >
                    <li
                      key="0"
                      style={
                        Object {
                          "width": undefined,
                        }
                      }
                    />
                    <li
                      key="1"
                      style={
                        Object {
                          "width": undefined,
                        }
                      }
                    />
                    <li
                      key="2"
                      style={
                        Object {
                          "width": "61%",
                        }
                      }
                    />
                  </ul>
                </Paragraph>
              </div>
            </div>
          </Skeleton>
        </div>
      </AddDefaultApplication>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Application Detail component snapshots should render correctly when no default app is present 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <AddDefaultApplication>
        <div
          style={
            Object {
              "display": "flex",
              "justifyContent": "center",
            }
          }
        >
          <ForwardRef
            style={
              Object {
                "minWidth": 800,
              }
            }
            title="Default Application List"
          >
            <div
              className="ant-card ant-card-bordered"
              style={
                Object {
                  "minWidth": 800,
                }
              }
            >
              <div
                className="ant-card-head"
                style={Object {}}
              >
                <div
                  className="ant-card-head-wrapper"
                >
                  <div
                    className="ant-card-head-title"
                  >
                    Default Application List
                  </div>
                </div>
              </div>
              <div
                className="ant-card-body"
                style={Object {}}
              >
                <List
                  itemLayout="horizontal"
                  renderItem={[Function]}
                >
                  <div
                    className="ant-list ant-list-split"
                  >
                    <Spin
                      spinning={false}
                    >
                      <Spin
                        spinPrefixCls="ant-spin"
                        spinning={false}
                      >
                        <div
                          className="ant-spin-nested-loading"
                        >
                          <div
                            className="ant-spin-container"
                            key="container"
                          >
                            <div
                              className="ant-list-empty-text"
                            >
                              <Empty
                                image={<Simple />}
                              >
                                <LocaleReceiver
                                  componentName="Empty"
                                >
                                  <div
                                    className="ant-empty ant-empty-normal"
                                  >
                                    <div
                                      className="ant-empty-image"
                                    >
                                      <Simple>
                                        <svg
                                          className="ant-empty-img-simple"
                                          height="41"
                                          viewBox="0 0 64 41"
                                          width="64"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <g
                                            fill="none"
                                            fillRule="evenodd"
                                            transform="translate(0 1)"
                                          >
                                            <ellipse
                                              className="ant-empty-img-simple-ellipse"
                                              cx="32"
                                              cy="33"
                                              rx="32"
                                              ry="7"
                                            />
                                            <g
                                              className="ant-empty-img-simple-g"
                                              fillRule="nonzero"
                                            >
                                              <path
                                                d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                              />
                                              <path
                                                className="ant-empty-img-simple-path"
                                                d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                              />
                                            </g>
                                          </g>
                                        </svg>
                                      </Simple>
                                    </div>
                                    <div
                                      className="ant-empty-description"
                                    >
                                      No data
                                    </div>
                                  </div>
                                </LocaleReceiver>
                              </Empty>
                            </div>
                          </div>
                        </div>
                      </Spin>
                    </Spin>
                  </div>
                </List>
              </div>
            </div>
          </ForwardRef>
        </div>
      </AddDefaultApplication>
    </Router>
  </BrowserRouter>
</Provider>
`;
