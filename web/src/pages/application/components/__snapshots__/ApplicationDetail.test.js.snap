// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Application Detail component snapshot testing should render the component when modal not visible 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ApplicationDetail
        data={
          Object {
            "created_at": "2020-09-09T06:49:36.566567Z",
            "description": "description",
            "id": 1,
            "name": "Application1",
            "tokens": Array [
              Object {
                "id": "1",
                "name": "token 1",
              },
            ],
            "updated_at": "2020-09-09T06:49:36.566567Z",
            "url": "url1",
          }
        }
        setTokenFlag={[MockFunction]}
        setVisible={[MockFunction]}
        visible={false}
      >
        <ForwardRef(InternalTable)
          bordered={true}
          columns={
            Array [
              Object {
                "dataIndex": "name",
                "key": "name",
                "title": "Name",
                "width": "15%",
              },
              Object {
                "dataIndex": "token",
                "key": "token",
                "title": "Api Token",
                "width": "15%",
              },
              Object {
                "dataIndex": "operation",
                "render": [Function],
                "title": "Action",
                "width": "20%",
              },
            ]
          }
          dataSource={
            Array [
              Object {
                "id": "1",
                "name": "token 1",
              },
            ]
          }
          pagination={false}
          rowKey="id"
        >
          <div
            className="ant-table-wrapper"
          >
            <Spin
              spinning={false}
            >
              <Spin
                spinPrefixCls="ant-spin"
                spinning={false}
              >
                <div
                  className="ant-spin-nested-loading"
                >
                  <div
                    className="ant-spin-container"
                    key="container"
                  >
                    <Table
                      bordered={true}
                      className="ant-table-bordered"
                      columns={
                        Array [
                          Object {
                            "dataIndex": "name",
                            "key": "name",
                            "title": "Name",
                            "width": "15%",
                          },
                          Object {
                            "dataIndex": "token",
                            "key": "token",
                            "title": "Api Token",
                            "width": "15%",
                          },
                          Object {
                            "dataIndex": "operation",
                            "render": [Function],
                            "title": "Action",
                            "width": "20%",
                          },
                        ]
                      }
                      data={
                        Array [
                          Object {
                            "id": "1",
                            "name": "token 1",
                          },
                        ]
                      }
                      dataSource={
                        Array [
                          Object {
                            "id": "1",
                            "name": "token 1",
                          },
                        ]
                      }
                      emptyText={
                        <Context.Consumer>
                          [Function]
                        </Context.Consumer>
                      }
                      expandable={
                        Object {
                          "__PARENT_RENDER_ICON__": undefined,
                          "childrenColumnName": undefined,
                          "expandIcon": [Function],
                          "expandIconColumnIndex": undefined,
                          "indentSize": 15,
                        }
                      }
                      internalHooks="rc-table-internal-hook"
                      internalRefs={
                        Object {
                          "body": Object {
                            "current": <div
                              class="ant-table-content"
                            >
                              <table
                                style="table-layout: auto;"
                              >
                                <colgroup>
                                  <col
                                    style="width: 15%;"
                                  />
                                  <col
                                    style="width: 15%;"
                                  />
                                  <col
                                    style="width: 20%;"
                                  />
                                </colgroup>
                                <thead
                                  class="ant-table-thead"
                                >
                                  <tr>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      Name
                                    </th>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      Api Token
                                    </th>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      Action
                                    </th>
                                  </tr>
                                </thead>
                                <tbody
                                  class="ant-table-tbody"
                                >
                                  <tr
                                    class="ant-table-row ant-table-row-level-0"
                                    data-row-key="1"
                                  >
                                    <td
                                      class="ant-table-cell"
                                    >
                                      token 1
                                    </td>
                                    <td
                                      class="ant-table-cell"
                                    />
                                    <td
                                      class="ant-table-cell"
                                    >
                                      <span>
                                        <a
                                          class="ant-dropdown-link"
                                          href="/"
                                        >
                                          <button
                                            class="ant-btn ant-btn-danger"
                                            type="button"
                                          >
                                            <span>
                                              Revoke
                                            </span>
                                          </button>
                                        </a>
                                      </span>
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>,
                          },
                        }
                      }
                      pagination={false}
                      prefixCls="ant-table"
                      rowClassName={[Function]}
                      rowKey={[Function]}
                      transformColumns={[Function]}
                    >
                      <div
                        className="ant-table ant-table-bordered"
                      >
                        <Component
                          pingLeft={false}
                          pingRight={false}
                          props={
                            Object {
                              "bordered": true,
                              "className": "ant-table-bordered",
                              "columns": Array [
                                Object {
                                  "dataIndex": "name",
                                  "key": "name",
                                  "title": "Name",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "token",
                                  "key": "token",
                                  "title": "Api Token",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "operation",
                                  "render": [Function],
                                  "title": "Action",
                                  "width": "20%",
                                },
                              ],
                              "data": Array [
                                Object {
                                  "id": "1",
                                  "name": "token 1",
                                },
                              ],
                              "dataSource": Array [
                                Object {
                                  "id": "1",
                                  "name": "token 1",
                                },
                              ],
                              "direction": undefined,
                              "emptyText": <Context.Consumer>
                                [Function]
                              </Context.Consumer>,
                              "expandable": Object {
                                "__PARENT_RENDER_ICON__": undefined,
                                "childrenColumnName": undefined,
                                "expandIcon": [Function],
                                "expandIconColumnIndex": undefined,
                                "indentSize": 15,
                              },
                              "internalHooks": "rc-table-internal-hook",
                              "internalRefs": Object {
                                "body": Object {
                                  "current": <div
                                    class="ant-table-content"
                                  >
                                    <table
                                      style="table-layout: auto;"
                                    >
                                      <colgroup>
                                        <col
                                          style="width: 15%;"
                                        />
                                        <col
                                          style="width: 15%;"
                                        />
                                        <col
                                          style="width: 20%;"
                                        />
                                      </colgroup>
                                      <thead
                                        class="ant-table-thead"
                                      >
                                        <tr>
                                          <th
                                            class="ant-table-cell"
                                          >
                                            Name
                                          </th>
                                          <th
                                            class="ant-table-cell"
                                          >
                                            Api Token
                                          </th>
                                          <th
                                            class="ant-table-cell"
                                          >
                                            Action
                                          </th>
                                        </tr>
                                      </thead>
                                      <tbody
                                        class="ant-table-tbody"
                                      >
                                        <tr
                                          class="ant-table-row ant-table-row-level-0"
                                          data-row-key="1"
                                        >
                                          <td
                                            class="ant-table-cell"
                                          >
                                            token 1
                                          </td>
                                          <td
                                            class="ant-table-cell"
                                          />
                                          <td
                                            class="ant-table-cell"
                                          >
                                            <span>
                                              <a
                                                class="ant-dropdown-link"
                                                href="/"
                                              >
                                                <button
                                                  class="ant-btn ant-btn-danger"
                                                  type="button"
                                                >
                                                  <span>
                                                    Revoke
                                                  </span>
                                                </button>
                                              </a>
                                            </span>
                                          </td>
                                        </tr>
                                      </tbody>
                                    </table>
                                  </div>,
                                },
                              },
                              "mergedExpandedKeys": Set {},
                              "pagination": false,
                              "prefixCls": "ant-table",
                              "rowClassName": [Function],
                              "rowKey": [Function],
                              "stickyOffsets": Object {
                                "left": Array [
                                  0,
                                  0,
                                  0,
                                ],
                                "right": Array [
                                  0,
                                  0,
                                  0,
                                ],
                              },
                              "transformColumns": [Function],
                            }
                          }
                        >
                          <div
                            className="ant-table-container"
                          >
                            <div
                              className="ant-table-content"
                              onScroll={[Function]}
                              style={Object {}}
                            >
                              <table
                                style={
                                  Object {
                                    "tableLayout": "auto",
                                  }
                                }
                              >
                                <ColGroup
                                  colWidths={
                                    Array [
                                      "15%",
                                      "15%",
                                      "20%",
                                    ]
                                  }
                                  columns={
                                    Array [
                                      Object {
                                        "dataIndex": "name",
                                        "fixed": undefined,
                                        "key": "name",
                                        "title": "Name",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "token",
                                        "fixed": undefined,
                                        "key": "token",
                                        "title": "Api Token",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "operation",
                                        "fixed": undefined,
                                        "render": [Function],
                                        "title": "Action",
                                        "width": "20%",
                                      },
                                    ]
                                  }
                                >
                                  <colgroup>
                                    <col
                                      key="0"
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                    />
                                    <col
                                      key="1"
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                    />
                                    <col
                                      key="2"
                                      style={
                                        Object {
                                          "width": "20%",
                                        }
                                      }
                                    />
                                  </colgroup>
                                </ColGroup>
                                <Header
                                  colWidths={
                                    Array [
                                      undefined,
                                      undefined,
                                      undefined,
                                    ]
                                  }
                                  columCount={3}
                                  columns={
                                    Array [
                                      Object {
                                        "dataIndex": "name",
                                        "key": "name",
                                        "title": "Name",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "token",
                                        "key": "token",
                                        "title": "Api Token",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "operation",
                                        "render": [Function],
                                        "title": "Action",
                                        "width": "20%",
                                      },
                                    ]
                                  }
                                  flattenColumns={
                                    Array [
                                      Object {
                                        "dataIndex": "name",
                                        "fixed": undefined,
                                        "key": "name",
                                        "title": "Name",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "token",
                                        "fixed": undefined,
                                        "key": "token",
                                        "title": "Api Token",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "operation",
                                        "fixed": undefined,
                                        "render": [Function],
                                        "title": "Action",
                                        "width": "20%",
                                      },
                                    ]
                                  }
                                  stickyOffsets={
                                    Object {
                                      "left": Array [
                                        0,
                                        0,
                                        0,
                                      ],
                                      "right": Array [
                                        0,
                                        0,
                                        0,
                                      ],
                                    }
                                  }
                                >
                                  <thead
                                    className="ant-table-thead"
                                  >
                                    <HeaderRow
                                      cellComponent="th"
                                      cells={
                                        Array [
                                          Object {
                                            "children": "Name",
                                            "className": "",
                                            "colEnd": 0,
                                            "colSpan": 1,
                                            "colStart": 0,
                                            "column": Object {
                                              "dataIndex": "name",
                                              "key": "name",
                                              "title": "Name",
                                              "width": "15%",
                                            },
                                            "key": "name",
                                            "rowSpan": 1,
                                          },
                                          Object {
                                            "children": "Api Token",
                                            "className": "",
                                            "colEnd": 1,
                                            "colSpan": 1,
                                            "colStart": 1,
                                            "column": Object {
                                              "dataIndex": "token",
                                              "key": "token",
                                              "title": "Api Token",
                                              "width": "15%",
                                            },
                                            "key": "token",
                                            "rowSpan": 1,
                                          },
                                          Object {
                                            "children": "Action",
                                            "className": "",
                                            "colEnd": 2,
                                            "colSpan": 1,
                                            "colStart": 2,
                                            "column": Object {
                                              "dataIndex": "operation",
                                              "render": [Function],
                                              "title": "Action",
                                              "width": "20%",
                                            },
                                            "key": undefined,
                                            "rowSpan": 1,
                                          },
                                        ]
                                      }
                                      flattenColumns={
                                        Array [
                                          Object {
                                            "dataIndex": "name",
                                            "fixed": undefined,
                                            "key": "name",
                                            "title": "Name",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "token",
                                            "fixed": undefined,
                                            "key": "token",
                                            "title": "Api Token",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "operation",
                                            "fixed": undefined,
                                            "render": [Function],
                                            "title": "Action",
                                            "width": "20%",
                                          },
                                        ]
                                      }
                                      index={0}
                                      key="0"
                                      rowComponent="tr"
                                      stickyOffsets={
                                        Object {
                                          "left": Array [
                                            0,
                                            0,
                                            0,
                                          ],
                                          "right": Array [
                                            0,
                                            0,
                                            0,
                                          ],
                                        }
                                      }
                                    >
                                      <tr>
                                        <WrappedCell
                                          className=""
                                          colEnd={0}
                                          colSpan={1}
                                          colStart={0}
                                          column={
                                            Object {
                                              "dataIndex": "name",
                                              "key": "name",
                                              "title": "Name",
                                              "width": "15%",
                                            }
                                          }
                                          component="th"
                                          firstFixLeft={false}
                                          firstFixRight={false}
                                          key="name"
                                          lastFixLeft={false}
                                          lastFixRight={false}
                                          prefixCls="ant-table"
                                          rowSpan={1}
                                          rowType="header"
                                        >
                                          <Cell
                                            className=""
                                            colEnd={0}
                                            colSpan={1}
                                            colStart={0}
                                            column={
                                              Object {
                                                "dataIndex": "name",
                                                "key": "name",
                                                "title": "Name",
                                                "width": "15%",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            hovering={false}
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              Name
                                            </th>
                                          </Cell>
                                        </WrappedCell>
                                        <WrappedCell
                                          className=""
                                          colEnd={1}
                                          colSpan={1}
                                          colStart={1}
                                          column={
                                            Object {
                                              "dataIndex": "token",
                                              "key": "token",
                                              "title": "Api Token",
                                              "width": "15%",
                                            }
                                          }
                                          component="th"
                                          firstFixLeft={false}
                                          firstFixRight={false}
                                          key="token"
                                          lastFixLeft={false}
                                          lastFixRight={false}
                                          prefixCls="ant-table"
                                          rowSpan={1}
                                          rowType="header"
                                        >
                                          <Cell
                                            className=""
                                            colEnd={1}
                                            colSpan={1}
                                            colStart={1}
                                            column={
                                              Object {
                                                "dataIndex": "token",
                                                "key": "token",
                                                "title": "Api Token",
                                                "width": "15%",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            hovering={false}
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              Api Token
                                            </th>
                                          </Cell>
                                        </WrappedCell>
                                        <WrappedCell
                                          className=""
                                          colEnd={2}
                                          colSpan={1}
                                          colStart={2}
                                          column={
                                            Object {
                                              "dataIndex": "operation",
                                              "render": [Function],
                                              "title": "Action",
                                              "width": "20%",
                                            }
                                          }
                                          component="th"
                                          firstFixLeft={false}
                                          firstFixRight={false}
                                          key="operation"
                                          lastFixLeft={false}
                                          lastFixRight={false}
                                          prefixCls="ant-table"
                                          rowSpan={1}
                                          rowType="header"
                                        >
                                          <Cell
                                            className=""
                                            colEnd={2}
                                            colSpan={1}
                                            colStart={2}
                                            column={
                                              Object {
                                                "dataIndex": "operation",
                                                "render": [Function],
                                                "title": "Action",
                                                "width": "20%",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            hovering={false}
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              Action
                                            </th>
                                          </Cell>
                                        </WrappedCell>
                                      </tr>
                                    </HeaderRow>
                                  </thead>
                                </Header>
                                <Body
                                  childrenColumnName="children"
                                  data={
                                    Array [
                                      Object {
                                        "id": "1",
                                        "name": "token 1",
                                      },
                                    ]
                                  }
                                  emptyNode={null}
                                  expandedKeys={Set {}}
                                  getRowKey={[Function]}
                                  measureColumnWidth={false}
                                >
                                  <Provider
                                    value={
                                      Object {
                                        "endRow": -1,
                                        "onHover": [Function],
                                        "startRow": -1,
                                      }
                                    }
                                  >
                                    <tbody
                                      className="ant-table-tbody"
                                    >
                                      <BodyRow
                                        cellComponent="td"
                                        childrenColumnName="children"
                                        expandedKeys={Set {}}
                                        getRowKey={[Function]}
                                        indent={0}
                                        index={0}
                                        key="1"
                                        record={
                                          Object {
                                            "id": "1",
                                            "name": "token 1",
                                          }
                                        }
                                        recordKey="1"
                                        renderIndex={0}
                                        rowComponent="tr"
                                        rowKey="1"
                                      >
                                        <tr
                                          className="ant-table-row ant-table-row-level-0"
                                          data-row-key="1"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <WrappedCell
                                            component="td"
                                            dataIndex="name"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            index={0}
                                            key="name"
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            record={
                                              Object {
                                                "id": "1",
                                                "name": "token 1",
                                              }
                                            }
                                            renderIndex={0}
                                          >
                                            <Cell
                                              component="td"
                                              dataIndex="name"
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              hovering={false}
                                              index={0}
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              onHover={[Function]}
                                              prefixCls="ant-table"
                                              record={
                                                Object {
                                                  "id": "1",
                                                  "name": "token 1",
                                                }
                                              }
                                              renderIndex={0}
                                            >
                                              <td
                                                className="ant-table-cell"
                                                colSpan={null}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                rowSpan={null}
                                                style={Object {}}
                                              >
                                                token 1
                                              </td>
                                            </Cell>
                                          </WrappedCell>
                                          <WrappedCell
                                            component="td"
                                            dataIndex="token"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            index={0}
                                            key="token"
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            record={
                                              Object {
                                                "id": "1",
                                                "name": "token 1",
                                              }
                                            }
                                            renderIndex={0}
                                          >
                                            <Cell
                                              component="td"
                                              dataIndex="token"
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              hovering={false}
                                              index={0}
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              onHover={[Function]}
                                              prefixCls="ant-table"
                                              record={
                                                Object {
                                                  "id": "1",
                                                  "name": "token 1",
                                                }
                                              }
                                              renderIndex={0}
                                            >
                                              <td
                                                className="ant-table-cell"
                                                colSpan={null}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                rowSpan={null}
                                                style={Object {}}
                                              />
                                            </Cell>
                                          </WrappedCell>
                                          <WrappedCell
                                            component="td"
                                            dataIndex="operation"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            index={0}
                                            key="operation"
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            record={
                                              Object {
                                                "id": "1",
                                                "name": "token 1",
                                              }
                                            }
                                            render={[Function]}
                                            renderIndex={0}
                                          >
                                            <Cell
                                              component="td"
                                              dataIndex="operation"
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              hovering={false}
                                              index={0}
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              onHover={[Function]}
                                              prefixCls="ant-table"
                                              record={
                                                Object {
                                                  "id": "1",
                                                  "name": "token 1",
                                                }
                                              }
                                              render={[Function]}
                                              renderIndex={0}
                                            >
                                              <td
                                                className="ant-table-cell"
                                                colSpan={null}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                rowSpan={null}
                                                style={Object {}}
                                              >
                                                <span>
                                                  <ForwardRef
                                                    onConfirm={[Function]}
                                                    title="Sure to Revoke?"
                                                  >
                                                    <Popover
                                                      _overlay={
                                                        <Overlay
                                                          close={[Function]}
                                                          icon={<ForwardRef(ExclamationCircleFilled) />}
                                                          okType="primary"
                                                          onCancel={[Function]}
                                                          onConfirm={[Function]}
                                                          prefixCls="ant-popover"
                                                          title="Sure to Revoke?"
                                                        >
                                                          <ForwardRef
                                                            className="ant-dropdown-link"
                                                            to=""
                                                          >
                                                            <ForwardRef(InternalButton)
                                                              type="danger"
                                                            >
                                                              Revoke
                                                            </ForwardRef(InternalButton)>
                                                          </ForwardRef>
                                                        </Overlay>
                                                      }
                                                      onConfirm={[Function]}
                                                      onOpenChange={[Function]}
                                                      open={false}
                                                      overlayClassName="ant-popconfirm"
                                                      placement="top"
                                                      prefixCls="ant-popover"
                                                      title="Sure to Revoke?"
                                                      trigger="click"
                                                    >
                                                      <Tooltip
                                                        mouseEnterDelay={0.1}
                                                        mouseLeaveDelay={0.1}
                                                        onConfirm={[Function]}
                                                        onOpenChange={[Function]}
                                                        open={false}
                                                        overlay={
                                                          <Overlay
                                                            close={[Function]}
                                                            icon={<ForwardRef(ExclamationCircleFilled) />}
                                                            okType="primary"
                                                            onCancel={[Function]}
                                                            onConfirm={[Function]}
                                                            prefixCls="ant-popover"
                                                            title="Sure to Revoke?"
                                                          >
                                                            <ForwardRef
                                                              className="ant-dropdown-link"
                                                              to=""
                                                            >
                                                              <ForwardRef(InternalButton)
                                                                type="danger"
                                                              >
                                                                Revoke
                                                              </ForwardRef(InternalButton)>
                                                            </ForwardRef>
                                                          </Overlay>
                                                        }
                                                        overlayClassName="ant-popconfirm"
                                                        overlayStyle={Object {}}
                                                        placement="top"
                                                        prefixCls="ant-popover"
                                                        transitionName="ant-zoom-big"
                                                        trigger="click"
                                                      >
                                                        <ForwardRef(Tooltip)
                                                          arrowContent={
                                                            <span
                                                              className="ant-popover-arrow-content"
                                                              style={Object {}}
                                                            />
                                                          }
                                                          builtinPlacements={
                                                            Object {
                                                              "bottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tc",
                                                                  "bc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "left": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cr",
                                                                  "cl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "right": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cl",
                                                                  "cr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "top": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bc",
                                                                  "tc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          motion={
                                                            Object {
                                                              "motionDeadline": 1000,
                                                              "motionName": "ant-zoom-big",
                                                            }
                                                          }
                                                          mouseEnterDelay={0.1}
                                                          mouseLeaveDelay={0.1}
                                                          onConfirm={[Function]}
                                                          onOpenChange={[Function]}
                                                          onPopupAlign={[Function]}
                                                          onVisibleChange={[Function]}
                                                          open={false}
                                                          overlay={
                                                            <Overlay
                                                              close={[Function]}
                                                              icon={<ForwardRef(ExclamationCircleFilled) />}
                                                              okType="primary"
                                                              onCancel={[Function]}
                                                              onConfirm={[Function]}
                                                              prefixCls="ant-popover"
                                                              title="Sure to Revoke?"
                                                            >
                                                              <ForwardRef
                                                                className="ant-dropdown-link"
                                                                to=""
                                                              >
                                                                <ForwardRef(InternalButton)
                                                                  type="danger"
                                                                >
                                                                  Revoke
                                                                </ForwardRef(InternalButton)>
                                                              </ForwardRef>
                                                            </Overlay>
                                                          }
                                                          overlayClassName="ant-popconfirm"
                                                          overlayStyle={Object {}}
                                                          placement="top"
                                                          prefixCls="ant-popover"
                                                          transitionName="ant-zoom-big"
                                                          trigger="click"
                                                          visible={false}
                                                        >
                                                          <Trigger
                                                            action="click"
                                                            afterPopupVisibleChange={[Function]}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tc",
                                                                    "bc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "left": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cr",
                                                                    "cl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "right": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cl",
                                                                    "cr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "top": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bc",
                                                                    "tc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0.1}
                                                            mouseLeaveDelay={0.1}
                                                            onConfirm={[Function]}
                                                            onOpenChange={[Function]}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            open={false}
                                                            popup={[Function]}
                                                            popupAlign={Object {}}
                                                            popupClassName="ant-popconfirm"
                                                            popupMotion={
                                                              Object {
                                                                "motionDeadline": 1000,
                                                                "motionName": "ant-zoom-big",
                                                              }
                                                            }
                                                            popupPlacement="top"
                                                            popupStyle={Object {}}
                                                            popupTransitionName="ant-zoom-big"
                                                            popupVisible={false}
                                                            prefixCls="ant-popover"
                                                            showAction={Array []}
                                                            visible={false}
                                                          >
                                                            <Link
                                                              className="ant-dropdown-link"
                                                              key="trigger"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              to=""
                                                            >
                                                              <LinkAnchor
                                                                className="ant-dropdown-link"
                                                                href="/"
                                                                navigate={[Function]}
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onTouchStart={[Function]}
                                                              >
                                                                <a
                                                                  className="ant-dropdown-link"
                                                                  href="/"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                >
                                                                  <Button
                                                                    type="danger"
                                                                  >
                                                                    <Wave
                                                                      disabled={false}
                                                                    >
                                                                      <button
                                                                        className="ant-btn ant-btn-danger"
                                                                        disabled={false}
                                                                        onClick={[Function]}
                                                                        type="button"
                                                                      >
                                                                        <LoadingIcon
                                                                          existIcon={false}
                                                                          loading={false}
                                                                          prefixCls="ant-btn"
                                                                        >
                                                                          <CSSMotion
                                                                            motionName="ant-btn-loading-icon-motion"
                                                                            onAppearActive={[Function]}
                                                                            onAppearStart={[Function]}
                                                                            onEnterActive={[Function]}
                                                                            onEnterStart={[Function]}
                                                                            onLeaveActive={[Function]}
                                                                            onLeaveStart={[Function]}
                                                                            removeOnLeave={true}
                                                                            visible={false}
                                                                          >
                                                                            <DomWrapper />
                                                                          </CSSMotion>
                                                                        </LoadingIcon>
                                                                        <span
                                                                          key=".0"
                                                                        >
                                                                          Revoke
                                                                        </span>
                                                                      </button>
                                                                    </Wave>
                                                                  </Button>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </Trigger>
                                                        </ForwardRef(Tooltip)>
                                                      </Tooltip>
                                                    </Popover>
                                                  </ForwardRef>
                                                </span>
                                              </td>
                                            </Cell>
                                          </WrappedCell>
                                        </tr>
                                      </BodyRow>
                                    </tbody>
                                  </Provider>
                                </Body>
                              </table>
                            </div>
                          </div>
                        </Component>
                      </div>
                    </Table>
                  </div>
                </div>
              </Spin>
            </Spin>
          </div>
        </ForwardRef(InternalTable)>
        <Button
          onClick={[Function]}
          style={
            Object {
              "marginTop": 5,
            }
          }
        >
          <Wave
            disabled={false}
          >
            <button
              className="ant-btn ant-btn-default"
              disabled={false}
              onClick={[Function]}
              style={
                Object {
                  "marginTop": 5,
                }
              }
              type="button"
            >
              <LoadingIcon
                existIcon={false}
                loading={false}
                prefixCls="ant-btn"
              >
                <CSSMotion
                  motionName="ant-btn-loading-icon-motion"
                  onAppearActive={[Function]}
                  onAppearStart={[Function]}
                  onEnterActive={[Function]}
                  onEnterStart={[Function]}
                  onLeaveActive={[Function]}
                  onLeaveStart={[Function]}
                  removeOnLeave={true}
                  visible={false}
                >
                  <DomWrapper />
                </CSSMotion>
              </LoadingIcon>
              <ForwardRef(PlusOutlined)
                key=".0"
              >
                <AntdIcon
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {},
                            "children": Array [
                              Object {
                                "attrs": Object {},
                                "tag": "style",
                              },
                            ],
                            "tag": "defs",
                          },
                          Object {
                            "attrs": Object {
                              "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                            },
                            "tag": "path",
                          },
                          Object {
                            "attrs": Object {
                              "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "plus",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="plus"
                    className="anticon anticon-plus"
                    role="img"
                  >
                    <IconReact
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {},
                                "children": Array [
                                  Object {
                                    "attrs": Object {},
                                    "tag": "style",
                                  },
                                ],
                                "tag": "defs",
                              },
                              Object {
                                "attrs": Object {
                                  "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                },
                                "tag": "path",
                              },
                              Object {
                                "attrs": Object {
                                  "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "plus",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        data-icon="plus"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-plus"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <defs
                          key="svg-plus-svg-0"
                        >
                          <style
                            key="svg-plus-svg-0-defs-0"
                          />
                        </defs>
                        <path
                          d="M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"
                          key="svg-plus-svg-1"
                        />
                        <path
                          d="M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"
                          key="svg-plus-svg-2"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(PlusOutlined)>
              <span
                key=".1"
              >
                New api key
              </span>
            </button>
          </Wave>
        </Button>
        <Modal
          footer={null}
          onCancel={[Function]}
          onOk={[Function]}
          title="Create New API Token"
          visible={false}
        >
          <NoCompactStyle>
            <NoFormStyle
              override={true}
              status={true}
            >
              <Dialog
                closeIcon={
                  <span
                    className="ant-modal-close-x"
                  >
                    <ForwardRef(CloseOutlined)
                      className="ant-modal-close-icon"
                    />
                  </span>
                }
                focusTriggerAfterClose={true}
                footer={null}
                maskTransitionName="ant-fade"
                onCancel={[Function]}
                onClose={[Function]}
                onOk={[Function]}
                prefixCls="ant-modal"
                title="Create New API Token"
                transitionName="ant-zoom"
                visible={false}
                width={520}
                wrapClassName=""
              >
                <Portal
                  autoDestroy={false}
                  autoLock={false}
                  open={false}
                />
              </Dialog>
            </NoFormStyle>
          </NoCompactStyle>
        </Modal>
      </ApplicationDetail>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Application Detail component snapshot testing should render the component when modal visible 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ApplicationDetail
        data={
          Object {
            "created_at": "2020-09-09T06:49:36.566567Z",
            "description": "description",
            "id": 1,
            "name": "Application1",
            "tokens": Array [
              Object {
                "id": "1",
                "name": "token 1",
              },
            ],
            "updated_at": "2020-09-09T06:49:36.566567Z",
            "url": "url1",
          }
        }
        setTokenFlag={[MockFunction]}
        setVisible={[MockFunction]}
        visible={true}
      >
        <ForwardRef(InternalTable)
          bordered={true}
          columns={
            Array [
              Object {
                "dataIndex": "name",
                "key": "name",
                "title": "Name",
                "width": "15%",
              },
              Object {
                "dataIndex": "token",
                "key": "token",
                "title": "Api Token",
                "width": "15%",
              },
              Object {
                "dataIndex": "operation",
                "render": [Function],
                "title": "Action",
                "width": "20%",
              },
            ]
          }
          dataSource={
            Array [
              Object {
                "id": "1",
                "name": "token 1",
              },
            ]
          }
          pagination={false}
          rowKey="id"
        >
          <div
            className="ant-table-wrapper"
          >
            <Spin
              spinning={false}
            >
              <Spin
                spinPrefixCls="ant-spin"
                spinning={false}
              >
                <div
                  className="ant-spin-nested-loading"
                >
                  <div
                    className="ant-spin-container"
                    key="container"
                  >
                    <Table
                      bordered={true}
                      className="ant-table-bordered"
                      columns={
                        Array [
                          Object {
                            "dataIndex": "name",
                            "key": "name",
                            "title": "Name",
                            "width": "15%",
                          },
                          Object {
                            "dataIndex": "token",
                            "key": "token",
                            "title": "Api Token",
                            "width": "15%",
                          },
                          Object {
                            "dataIndex": "operation",
                            "render": [Function],
                            "title": "Action",
                            "width": "20%",
                          },
                        ]
                      }
                      data={
                        Array [
                          Object {
                            "id": "1",
                            "name": "token 1",
                          },
                        ]
                      }
                      dataSource={
                        Array [
                          Object {
                            "id": "1",
                            "name": "token 1",
                          },
                        ]
                      }
                      emptyText={
                        <Context.Consumer>
                          [Function]
                        </Context.Consumer>
                      }
                      expandable={
                        Object {
                          "__PARENT_RENDER_ICON__": undefined,
                          "childrenColumnName": undefined,
                          "expandIcon": [Function],
                          "expandIconColumnIndex": undefined,
                          "indentSize": 15,
                        }
                      }
                      internalHooks="rc-table-internal-hook"
                      internalRefs={
                        Object {
                          "body": Object {
                            "current": <div
                              class="ant-table-content"
                            >
                              <table
                                style="table-layout: auto;"
                              >
                                <colgroup>
                                  <col
                                    style="width: 15%;"
                                  />
                                  <col
                                    style="width: 15%;"
                                  />
                                  <col
                                    style="width: 20%;"
                                  />
                                </colgroup>
                                <thead
                                  class="ant-table-thead"
                                >
                                  <tr>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      Name
                                    </th>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      Api Token
                                    </th>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      Action
                                    </th>
                                  </tr>
                                </thead>
                                <tbody
                                  class="ant-table-tbody"
                                >
                                  <tr
                                    class="ant-table-row ant-table-row-level-0"
                                    data-row-key="1"
                                  >
                                    <td
                                      class="ant-table-cell"
                                    >
                                      token 1
                                    </td>
                                    <td
                                      class="ant-table-cell"
                                    />
                                    <td
                                      class="ant-table-cell"
                                    >
                                      <span>
                                        <a
                                          class="ant-dropdown-link"
                                          href="/"
                                        >
                                          <button
                                            class="ant-btn ant-btn-danger"
                                            type="button"
                                          >
                                            <span>
                                              Revoke
                                            </span>
                                          </button>
                                        </a>
                                      </span>
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>,
                          },
                        }
                      }
                      pagination={false}
                      prefixCls="ant-table"
                      rowClassName={[Function]}
                      rowKey={[Function]}
                      transformColumns={[Function]}
                    >
                      <div
                        className="ant-table ant-table-bordered"
                      >
                        <Component
                          pingLeft={false}
                          pingRight={false}
                          props={
                            Object {
                              "bordered": true,
                              "className": "ant-table-bordered",
                              "columns": Array [
                                Object {
                                  "dataIndex": "name",
                                  "key": "name",
                                  "title": "Name",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "token",
                                  "key": "token",
                                  "title": "Api Token",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "operation",
                                  "render": [Function],
                                  "title": "Action",
                                  "width": "20%",
                                },
                              ],
                              "data": Array [
                                Object {
                                  "id": "1",
                                  "name": "token 1",
                                },
                              ],
                              "dataSource": Array [
                                Object {
                                  "id": "1",
                                  "name": "token 1",
                                },
                              ],
                              "direction": undefined,
                              "emptyText": <Context.Consumer>
                                [Function]
                              </Context.Consumer>,
                              "expandable": Object {
                                "__PARENT_RENDER_ICON__": undefined,
                                "childrenColumnName": undefined,
                                "expandIcon": [Function],
                                "expandIconColumnIndex": undefined,
                                "indentSize": 15,
                              },
                              "internalHooks": "rc-table-internal-hook",
                              "internalRefs": Object {
                                "body": Object {
                                  "current": <div
                                    class="ant-table-content"
                                  >
                                    <table
                                      style="table-layout: auto;"
                                    >
                                      <colgroup>
                                        <col
                                          style="width: 15%;"
                                        />
                                        <col
                                          style="width: 15%;"
                                        />
                                        <col
                                          style="width: 20%;"
                                        />
                                      </colgroup>
                                      <thead
                                        class="ant-table-thead"
                                      >
                                        <tr>
                                          <th
                                            class="ant-table-cell"
                                          >
                                            Name
                                          </th>
                                          <th
                                            class="ant-table-cell"
                                          >
                                            Api Token
                                          </th>
                                          <th
                                            class="ant-table-cell"
                                          >
                                            Action
                                          </th>
                                        </tr>
                                      </thead>
                                      <tbody
                                        class="ant-table-tbody"
                                      >
                                        <tr
                                          class="ant-table-row ant-table-row-level-0"
                                          data-row-key="1"
                                        >
                                          <td
                                            class="ant-table-cell"
                                          >
                                            token 1
                                          </td>
                                          <td
                                            class="ant-table-cell"
                                          />
                                          <td
                                            class="ant-table-cell"
                                          >
                                            <span>
                                              <a
                                                class="ant-dropdown-link"
                                                href="/"
                                              >
                                                <button
                                                  class="ant-btn ant-btn-danger"
                                                  type="button"
                                                >
                                                  <span>
                                                    Revoke
                                                  </span>
                                                </button>
                                              </a>
                                            </span>
                                          </td>
                                        </tr>
                                      </tbody>
                                    </table>
                                  </div>,
                                },
                              },
                              "mergedExpandedKeys": Set {},
                              "pagination": false,
                              "prefixCls": "ant-table",
                              "rowClassName": [Function],
                              "rowKey": [Function],
                              "stickyOffsets": Object {
                                "left": Array [
                                  0,
                                  0,
                                  0,
                                ],
                                "right": Array [
                                  0,
                                  0,
                                  0,
                                ],
                              },
                              "transformColumns": [Function],
                            }
                          }
                        >
                          <div
                            className="ant-table-container"
                          >
                            <div
                              className="ant-table-content"
                              onScroll={[Function]}
                              style={Object {}}
                            >
                              <table
                                style={
                                  Object {
                                    "tableLayout": "auto",
                                  }
                                }
                              >
                                <ColGroup
                                  colWidths={
                                    Array [
                                      "15%",
                                      "15%",
                                      "20%",
                                    ]
                                  }
                                  columns={
                                    Array [
                                      Object {
                                        "dataIndex": "name",
                                        "fixed": undefined,
                                        "key": "name",
                                        "title": "Name",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "token",
                                        "fixed": undefined,
                                        "key": "token",
                                        "title": "Api Token",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "operation",
                                        "fixed": undefined,
                                        "render": [Function],
                                        "title": "Action",
                                        "width": "20%",
                                      },
                                    ]
                                  }
                                >
                                  <colgroup>
                                    <col
                                      key="0"
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                    />
                                    <col
                                      key="1"
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                    />
                                    <col
                                      key="2"
                                      style={
                                        Object {
                                          "width": "20%",
                                        }
                                      }
                                    />
                                  </colgroup>
                                </ColGroup>
                                <Header
                                  colWidths={
                                    Array [
                                      undefined,
                                      undefined,
                                      undefined,
                                    ]
                                  }
                                  columCount={3}
                                  columns={
                                    Array [
                                      Object {
                                        "dataIndex": "name",
                                        "key": "name",
                                        "title": "Name",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "token",
                                        "key": "token",
                                        "title": "Api Token",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "operation",
                                        "render": [Function],
                                        "title": "Action",
                                        "width": "20%",
                                      },
                                    ]
                                  }
                                  flattenColumns={
                                    Array [
                                      Object {
                                        "dataIndex": "name",
                                        "fixed": undefined,
                                        "key": "name",
                                        "title": "Name",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "token",
                                        "fixed": undefined,
                                        "key": "token",
                                        "title": "Api Token",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "operation",
                                        "fixed": undefined,
                                        "render": [Function],
                                        "title": "Action",
                                        "width": "20%",
                                      },
                                    ]
                                  }
                                  stickyOffsets={
                                    Object {
                                      "left": Array [
                                        0,
                                        0,
                                        0,
                                      ],
                                      "right": Array [
                                        0,
                                        0,
                                        0,
                                      ],
                                    }
                                  }
                                >
                                  <thead
                                    className="ant-table-thead"
                                  >
                                    <HeaderRow
                                      cellComponent="th"
                                      cells={
                                        Array [
                                          Object {
                                            "children": "Name",
                                            "className": "",
                                            "colEnd": 0,
                                            "colSpan": 1,
                                            "colStart": 0,
                                            "column": Object {
                                              "dataIndex": "name",
                                              "key": "name",
                                              "title": "Name",
                                              "width": "15%",
                                            },
                                            "key": "name",
                                            "rowSpan": 1,
                                          },
                                          Object {
                                            "children": "Api Token",
                                            "className": "",
                                            "colEnd": 1,
                                            "colSpan": 1,
                                            "colStart": 1,
                                            "column": Object {
                                              "dataIndex": "token",
                                              "key": "token",
                                              "title": "Api Token",
                                              "width": "15%",
                                            },
                                            "key": "token",
                                            "rowSpan": 1,
                                          },
                                          Object {
                                            "children": "Action",
                                            "className": "",
                                            "colEnd": 2,
                                            "colSpan": 1,
                                            "colStart": 2,
                                            "column": Object {
                                              "dataIndex": "operation",
                                              "render": [Function],
                                              "title": "Action",
                                              "width": "20%",
                                            },
                                            "key": undefined,
                                            "rowSpan": 1,
                                          },
                                        ]
                                      }
                                      flattenColumns={
                                        Array [
                                          Object {
                                            "dataIndex": "name",
                                            "fixed": undefined,
                                            "key": "name",
                                            "title": "Name",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "token",
                                            "fixed": undefined,
                                            "key": "token",
                                            "title": "Api Token",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "operation",
                                            "fixed": undefined,
                                            "render": [Function],
                                            "title": "Action",
                                            "width": "20%",
                                          },
                                        ]
                                      }
                                      index={0}
                                      key="0"
                                      rowComponent="tr"
                                      stickyOffsets={
                                        Object {
                                          "left": Array [
                                            0,
                                            0,
                                            0,
                                          ],
                                          "right": Array [
                                            0,
                                            0,
                                            0,
                                          ],
                                        }
                                      }
                                    >
                                      <tr>
                                        <WrappedCell
                                          className=""
                                          colEnd={0}
                                          colSpan={1}
                                          colStart={0}
                                          column={
                                            Object {
                                              "dataIndex": "name",
                                              "key": "name",
                                              "title": "Name",
                                              "width": "15%",
                                            }
                                          }
                                          component="th"
                                          firstFixLeft={false}
                                          firstFixRight={false}
                                          key="name"
                                          lastFixLeft={false}
                                          lastFixRight={false}
                                          prefixCls="ant-table"
                                          rowSpan={1}
                                          rowType="header"
                                        >
                                          <Cell
                                            className=""
                                            colEnd={0}
                                            colSpan={1}
                                            colStart={0}
                                            column={
                                              Object {
                                                "dataIndex": "name",
                                                "key": "name",
                                                "title": "Name",
                                                "width": "15%",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            hovering={false}
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              Name
                                            </th>
                                          </Cell>
                                        </WrappedCell>
                                        <WrappedCell
                                          className=""
                                          colEnd={1}
                                          colSpan={1}
                                          colStart={1}
                                          column={
                                            Object {
                                              "dataIndex": "token",
                                              "key": "token",
                                              "title": "Api Token",
                                              "width": "15%",
                                            }
                                          }
                                          component="th"
                                          firstFixLeft={false}
                                          firstFixRight={false}
                                          key="token"
                                          lastFixLeft={false}
                                          lastFixRight={false}
                                          prefixCls="ant-table"
                                          rowSpan={1}
                                          rowType="header"
                                        >
                                          <Cell
                                            className=""
                                            colEnd={1}
                                            colSpan={1}
                                            colStart={1}
                                            column={
                                              Object {
                                                "dataIndex": "token",
                                                "key": "token",
                                                "title": "Api Token",
                                                "width": "15%",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            hovering={false}
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              Api Token
                                            </th>
                                          </Cell>
                                        </WrappedCell>
                                        <WrappedCell
                                          className=""
                                          colEnd={2}
                                          colSpan={1}
                                          colStart={2}
                                          column={
                                            Object {
                                              "dataIndex": "operation",
                                              "render": [Function],
                                              "title": "Action",
                                              "width": "20%",
                                            }
                                          }
                                          component="th"
                                          firstFixLeft={false}
                                          firstFixRight={false}
                                          key="operation"
                                          lastFixLeft={false}
                                          lastFixRight={false}
                                          prefixCls="ant-table"
                                          rowSpan={1}
                                          rowType="header"
                                        >
                                          <Cell
                                            className=""
                                            colEnd={2}
                                            colSpan={1}
                                            colStart={2}
                                            column={
                                              Object {
                                                "dataIndex": "operation",
                                                "render": [Function],
                                                "title": "Action",
                                                "width": "20%",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            hovering={false}
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              Action
                                            </th>
                                          </Cell>
                                        </WrappedCell>
                                      </tr>
                                    </HeaderRow>
                                  </thead>
                                </Header>
                                <Body
                                  childrenColumnName="children"
                                  data={
                                    Array [
                                      Object {
                                        "id": "1",
                                        "name": "token 1",
                                      },
                                    ]
                                  }
                                  emptyNode={null}
                                  expandedKeys={Set {}}
                                  getRowKey={[Function]}
                                  measureColumnWidth={false}
                                >
                                  <Provider
                                    value={
                                      Object {
                                        "endRow": -1,
                                        "onHover": [Function],
                                        "startRow": -1,
                                      }
                                    }
                                  >
                                    <tbody
                                      className="ant-table-tbody"
                                    >
                                      <BodyRow
                                        cellComponent="td"
                                        childrenColumnName="children"
                                        expandedKeys={Set {}}
                                        getRowKey={[Function]}
                                        indent={0}
                                        index={0}
                                        key="1"
                                        record={
                                          Object {
                                            "id": "1",
                                            "name": "token 1",
                                          }
                                        }
                                        recordKey="1"
                                        renderIndex={0}
                                        rowComponent="tr"
                                        rowKey="1"
                                      >
                                        <tr
                                          className="ant-table-row ant-table-row-level-0"
                                          data-row-key="1"
                                          onClick={[Function]}
                                          style={Object {}}
                                        >
                                          <WrappedCell
                                            component="td"
                                            dataIndex="name"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            index={0}
                                            key="name"
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            record={
                                              Object {
                                                "id": "1",
                                                "name": "token 1",
                                              }
                                            }
                                            renderIndex={0}
                                          >
                                            <Cell
                                              component="td"
                                              dataIndex="name"
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              hovering={false}
                                              index={0}
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              onHover={[Function]}
                                              prefixCls="ant-table"
                                              record={
                                                Object {
                                                  "id": "1",
                                                  "name": "token 1",
                                                }
                                              }
                                              renderIndex={0}
                                            >
                                              <td
                                                className="ant-table-cell"
                                                colSpan={null}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                rowSpan={null}
                                                style={Object {}}
                                              >
                                                token 1
                                              </td>
                                            </Cell>
                                          </WrappedCell>
                                          <WrappedCell
                                            component="td"
                                            dataIndex="token"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            index={0}
                                            key="token"
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            record={
                                              Object {
                                                "id": "1",
                                                "name": "token 1",
                                              }
                                            }
                                            renderIndex={0}
                                          >
                                            <Cell
                                              component="td"
                                              dataIndex="token"
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              hovering={false}
                                              index={0}
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              onHover={[Function]}
                                              prefixCls="ant-table"
                                              record={
                                                Object {
                                                  "id": "1",
                                                  "name": "token 1",
                                                }
                                              }
                                              renderIndex={0}
                                            >
                                              <td
                                                className="ant-table-cell"
                                                colSpan={null}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                rowSpan={null}
                                                style={Object {}}
                                              />
                                            </Cell>
                                          </WrappedCell>
                                          <WrappedCell
                                            component="td"
                                            dataIndex="operation"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            index={0}
                                            key="operation"
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            record={
                                              Object {
                                                "id": "1",
                                                "name": "token 1",
                                              }
                                            }
                                            render={[Function]}
                                            renderIndex={0}
                                          >
                                            <Cell
                                              component="td"
                                              dataIndex="operation"
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              hovering={false}
                                              index={0}
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              onHover={[Function]}
                                              prefixCls="ant-table"
                                              record={
                                                Object {
                                                  "id": "1",
                                                  "name": "token 1",
                                                }
                                              }
                                              render={[Function]}
                                              renderIndex={0}
                                            >
                                              <td
                                                className="ant-table-cell"
                                                colSpan={null}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                rowSpan={null}
                                                style={Object {}}
                                              >
                                                <span>
                                                  <ForwardRef
                                                    onConfirm={[Function]}
                                                    title="Sure to Revoke?"
                                                  >
                                                    <Popover
                                                      _overlay={
                                                        <Overlay
                                                          close={[Function]}
                                                          icon={<ForwardRef(ExclamationCircleFilled) />}
                                                          okType="primary"
                                                          onCancel={[Function]}
                                                          onConfirm={[Function]}
                                                          prefixCls="ant-popover"
                                                          title="Sure to Revoke?"
                                                        >
                                                          <ForwardRef
                                                            className="ant-dropdown-link"
                                                            to=""
                                                          >
                                                            <ForwardRef(InternalButton)
                                                              type="danger"
                                                            >
                                                              Revoke
                                                            </ForwardRef(InternalButton)>
                                                          </ForwardRef>
                                                        </Overlay>
                                                      }
                                                      onConfirm={[Function]}
                                                      onOpenChange={[Function]}
                                                      open={false}
                                                      overlayClassName="ant-popconfirm"
                                                      placement="top"
                                                      prefixCls="ant-popover"
                                                      title="Sure to Revoke?"
                                                      trigger="click"
                                                    >
                                                      <Tooltip
                                                        mouseEnterDelay={0.1}
                                                        mouseLeaveDelay={0.1}
                                                        onConfirm={[Function]}
                                                        onOpenChange={[Function]}
                                                        open={false}
                                                        overlay={
                                                          <Overlay
                                                            close={[Function]}
                                                            icon={<ForwardRef(ExclamationCircleFilled) />}
                                                            okType="primary"
                                                            onCancel={[Function]}
                                                            onConfirm={[Function]}
                                                            prefixCls="ant-popover"
                                                            title="Sure to Revoke?"
                                                          >
                                                            <ForwardRef
                                                              className="ant-dropdown-link"
                                                              to=""
                                                            >
                                                              <ForwardRef(InternalButton)
                                                                type="danger"
                                                              >
                                                                Revoke
                                                              </ForwardRef(InternalButton)>
                                                            </ForwardRef>
                                                          </Overlay>
                                                        }
                                                        overlayClassName="ant-popconfirm"
                                                        overlayStyle={Object {}}
                                                        placement="top"
                                                        prefixCls="ant-popover"
                                                        transitionName="ant-zoom-big"
                                                        trigger="click"
                                                      >
                                                        <ForwardRef(Tooltip)
                                                          arrowContent={
                                                            <span
                                                              className="ant-popover-arrow-content"
                                                              style={Object {}}
                                                            />
                                                          }
                                                          builtinPlacements={
                                                            Object {
                                                              "bottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tc",
                                                                  "bc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "left": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cr",
                                                                  "cl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "bl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "leftTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  -4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "right": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "cl",
                                                                  "cr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightBottom": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "br",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "rightTop": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  4,
                                                                  0,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "top": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bc",
                                                                  "tc",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "ignoreShake": true,
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 1,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                                "targetOffset": Array [
                                                                  0,
                                                                  0,
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          motion={
                                                            Object {
                                                              "motionDeadline": 1000,
                                                              "motionName": "ant-zoom-big",
                                                            }
                                                          }
                                                          mouseEnterDelay={0.1}
                                                          mouseLeaveDelay={0.1}
                                                          onConfirm={[Function]}
                                                          onOpenChange={[Function]}
                                                          onPopupAlign={[Function]}
                                                          onVisibleChange={[Function]}
                                                          open={false}
                                                          overlay={
                                                            <Overlay
                                                              close={[Function]}
                                                              icon={<ForwardRef(ExclamationCircleFilled) />}
                                                              okType="primary"
                                                              onCancel={[Function]}
                                                              onConfirm={[Function]}
                                                              prefixCls="ant-popover"
                                                              title="Sure to Revoke?"
                                                            >
                                                              <ForwardRef
                                                                className="ant-dropdown-link"
                                                                to=""
                                                              >
                                                                <ForwardRef(InternalButton)
                                                                  type="danger"
                                                                >
                                                                  Revoke
                                                                </ForwardRef(InternalButton)>
                                                              </ForwardRef>
                                                            </Overlay>
                                                          }
                                                          overlayClassName="ant-popconfirm"
                                                          overlayStyle={Object {}}
                                                          placement="top"
                                                          prefixCls="ant-popover"
                                                          transitionName="ant-zoom-big"
                                                          trigger="click"
                                                          visible={false}
                                                        >
                                                          <Trigger
                                                            action="click"
                                                            afterPopupVisibleChange={[Function]}
                                                            autoDestroy={false}
                                                            blurDelay={0.15}
                                                            builtinPlacements={
                                                              Object {
                                                                "bottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tc",
                                                                    "bc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "bottomRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "left": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cr",
                                                                    "cl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "bl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "leftTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    -4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tr",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "right": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "cl",
                                                                    "cr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightBottom": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "br",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "rightTop": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    4,
                                                                    0,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "tl",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "top": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bc",
                                                                    "tc",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topLeft": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "bl",
                                                                    "tl",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                                "topRight": Object {
                                                                  "ignoreShake": true,
                                                                  "offset": Array [
                                                                    0,
                                                                    -4,
                                                                  ],
                                                                  "overflow": Object {
                                                                    "adjustX": 1,
                                                                    "adjustY": 1,
                                                                  },
                                                                  "points": Array [
                                                                    "br",
                                                                    "tr",
                                                                  ],
                                                                  "targetOffset": Array [
                                                                    0,
                                                                    0,
                                                                  ],
                                                                },
                                                              }
                                                            }
                                                            defaultPopupVisible={false}
                                                            destroyPopupOnHide={false}
                                                            focusDelay={0}
                                                            getDocument={[Function]}
                                                            getPopupClassNameFromAlign={[Function]}
                                                            hideAction={Array []}
                                                            mask={false}
                                                            maskClosable={true}
                                                            mouseEnterDelay={0.1}
                                                            mouseLeaveDelay={0.1}
                                                            onConfirm={[Function]}
                                                            onOpenChange={[Function]}
                                                            onPopupAlign={[Function]}
                                                            onPopupVisibleChange={[Function]}
                                                            open={false}
                                                            popup={[Function]}
                                                            popupAlign={Object {}}
                                                            popupClassName="ant-popconfirm"
                                                            popupMotion={
                                                              Object {
                                                                "motionDeadline": 1000,
                                                                "motionName": "ant-zoom-big",
                                                              }
                                                            }
                                                            popupPlacement="top"
                                                            popupStyle={Object {}}
                                                            popupTransitionName="ant-zoom-big"
                                                            popupVisible={false}
                                                            prefixCls="ant-popover"
                                                            showAction={Array []}
                                                            visible={false}
                                                          >
                                                            <Link
                                                              className="ant-dropdown-link"
                                                              key="trigger"
                                                              onClick={[Function]}
                                                              onKeyDown={[Function]}
                                                              onMouseDown={[Function]}
                                                              onTouchStart={[Function]}
                                                              to=""
                                                            >
                                                              <LinkAnchor
                                                                className="ant-dropdown-link"
                                                                href="/"
                                                                navigate={[Function]}
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                onMouseDown={[Function]}
                                                                onTouchStart={[Function]}
                                                              >
                                                                <a
                                                                  className="ant-dropdown-link"
                                                                  href="/"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                >
                                                                  <Button
                                                                    type="danger"
                                                                  >
                                                                    <Wave
                                                                      disabled={false}
                                                                    >
                                                                      <button
                                                                        className="ant-btn ant-btn-danger"
                                                                        disabled={false}
                                                                        onClick={[Function]}
                                                                        type="button"
                                                                      >
                                                                        <LoadingIcon
                                                                          existIcon={false}
                                                                          loading={false}
                                                                          prefixCls="ant-btn"
                                                                        >
                                                                          <CSSMotion
                                                                            motionName="ant-btn-loading-icon-motion"
                                                                            onAppearActive={[Function]}
                                                                            onAppearStart={[Function]}
                                                                            onEnterActive={[Function]}
                                                                            onEnterStart={[Function]}
                                                                            onLeaveActive={[Function]}
                                                                            onLeaveStart={[Function]}
                                                                            removeOnLeave={true}
                                                                            visible={false}
                                                                          >
                                                                            <DomWrapper />
                                                                          </CSSMotion>
                                                                        </LoadingIcon>
                                                                        <span
                                                                          key=".0"
                                                                        >
                                                                          Revoke
                                                                        </span>
                                                                      </button>
                                                                    </Wave>
                                                                  </Button>
                                                                </a>
                                                              </LinkAnchor>
                                                            </Link>
                                                          </Trigger>
                                                        </ForwardRef(Tooltip)>
                                                      </Tooltip>
                                                    </Popover>
                                                  </ForwardRef>
                                                </span>
                                              </td>
                                            </Cell>
                                          </WrappedCell>
                                        </tr>
                                      </BodyRow>
                                    </tbody>
                                  </Provider>
                                </Body>
                              </table>
                            </div>
                          </div>
                        </Component>
                      </div>
                    </Table>
                  </div>
                </div>
              </Spin>
            </Spin>
          </div>
        </ForwardRef(InternalTable)>
        <Button
          onClick={[Function]}
          style={
            Object {
              "marginTop": 5,
            }
          }
        >
          <Wave
            disabled={false}
          >
            <button
              className="ant-btn ant-btn-default"
              disabled={false}
              onClick={[Function]}
              style={
                Object {
                  "marginTop": 5,
                }
              }
              type="button"
            >
              <LoadingIcon
                existIcon={false}
                loading={false}
                prefixCls="ant-btn"
              >
                <CSSMotion
                  motionName="ant-btn-loading-icon-motion"
                  onAppearActive={[Function]}
                  onAppearStart={[Function]}
                  onEnterActive={[Function]}
                  onEnterStart={[Function]}
                  onLeaveActive={[Function]}
                  onLeaveStart={[Function]}
                  removeOnLeave={true}
                  visible={false}
                >
                  <DomWrapper />
                </CSSMotion>
              </LoadingIcon>
              <ForwardRef(PlusOutlined)
                key=".0"
              >
                <AntdIcon
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {},
                            "children": Array [
                              Object {
                                "attrs": Object {},
                                "tag": "style",
                              },
                            ],
                            "tag": "defs",
                          },
                          Object {
                            "attrs": Object {
                              "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                            },
                            "tag": "path",
                          },
                          Object {
                            "attrs": Object {
                              "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "plus",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="plus"
                    className="anticon anticon-plus"
                    role="img"
                  >
                    <IconReact
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {},
                                "children": Array [
                                  Object {
                                    "attrs": Object {},
                                    "tag": "style",
                                  },
                                ],
                                "tag": "defs",
                              },
                              Object {
                                "attrs": Object {
                                  "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                },
                                "tag": "path",
                              },
                              Object {
                                "attrs": Object {
                                  "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "plus",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        data-icon="plus"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-plus"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <defs
                          key="svg-plus-svg-0"
                        >
                          <style
                            key="svg-plus-svg-0-defs-0"
                          />
                        </defs>
                        <path
                          d="M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"
                          key="svg-plus-svg-1"
                        />
                        <path
                          d="M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"
                          key="svg-plus-svg-2"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(PlusOutlined)>
              <span
                key=".1"
              >
                New api key
              </span>
            </button>
          </Wave>
        </Button>
        <Modal
          footer={null}
          onCancel={[Function]}
          onOk={[Function]}
          title="Create New API Token"
          visible={true}
        >
          <NoCompactStyle>
            <NoFormStyle
              override={true}
              status={true}
            >
              <Dialog
                closeIcon={
                  <span
                    className="ant-modal-close-x"
                  >
                    <ForwardRef(CloseOutlined)
                      className="ant-modal-close-icon"
                    />
                  </span>
                }
                focusTriggerAfterClose={true}
                footer={null}
                maskTransitionName="ant-fade"
                onCancel={[Function]}
                onClose={[Function]}
                onOk={[Function]}
                prefixCls="ant-modal"
                title="Create New API Token"
                transitionName="ant-zoom"
                visible={true}
                width={520}
                wrapClassName=""
              >
                <Portal
                  autoDestroy={false}
                  autoLock={true}
                  open={true}
                >
                  <Portal
                    containerInfo={
                      <div>
                        <div
                          class="ant-modal-root"
                        >
                          <div
                            class="ant-modal-mask"
                          />
                          <div
                            class="ant-modal-wrap"
                            tabindex="-1"
                          >
                            <div
                              aria-labelledby="test-id"
                              aria-modal="true"
                              class="ant-modal"
                              role="dialog"
                              style="width: 520px;"
                            >
                              <div
                                aria-hidden="true"
                                style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                                tabindex="0"
                              />
                              <div
                                class="ant-modal-content"
                              >
                                <button
                                  aria-label="Close"
                                  class="ant-modal-close"
                                  type="button"
                                >
                                  <span
                                    class="ant-modal-close-x"
                                  >
                                    <span
                                      aria-label="close"
                                      class="anticon anticon-close ant-modal-close-icon"
                                      role="img"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        data-icon="close"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                        />
                                      </svg>
                                    </span>
                                  </span>
                                </button>
                                <div
                                  class="ant-modal-header"
                                >
                                  <div
                                    class="ant-modal-title"
                                    id="test-id"
                                  >
                                    Create New API Token
                                  </div>
                                </div>
                                <div
                                  class="ant-modal-body"
                                >
                                  <div
                                    appid="1"
                                    id="mockedCreateTokenForm"
                                  />
                                </div>
                              </div>
                              <div
                                aria-hidden="true"
                                style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                                tabindex="0"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <Dialog
                      afterClose={[Function]}
                      closeIcon={
                        <span
                          className="ant-modal-close-x"
                        >
                          <ForwardRef(CloseOutlined)
                            className="ant-modal-close-icon"
                          />
                        </span>
                      }
                      destroyOnClose={false}
                      focusTriggerAfterClose={true}
                      footer={null}
                      maskTransitionName="ant-fade"
                      onCancel={[Function]}
                      onClose={[Function]}
                      onOk={[Function]}
                      prefixCls="ant-modal"
                      title="Create New API Token"
                      transitionName="ant-zoom"
                      visible={true}
                      width={520}
                      wrapClassName=""
                    >
                      <div
                        className="ant-modal-root"
                      >
                        <Mask
                          motionName="ant-fade"
                          prefixCls="ant-modal"
                          style={
                            Object {
                              "zIndex": undefined,
                            }
                          }
                          visible={true}
                        >
                          <CSSMotion
                            key="mask"
                            leavedClassName="ant-modal-mask-hidden"
                            motionName="ant-fade"
                            visible={true}
                          >
                            <DomWrapper>
                              <div
                                className="ant-modal-mask"
                                style={
                                  Object {
                                    "zIndex": undefined,
                                  }
                                }
                              />
                            </DomWrapper>
                          </CSSMotion>
                        </Mask>
                        <div
                          className="ant-modal-wrap"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          style={
                            Object {
                              "display": null,
                              "zIndex": undefined,
                            }
                          }
                          tabIndex={-1}
                        >
                          <Content
                            afterClose={[Function]}
                            ariaId="test-id"
                            closable={true}
                            closeIcon={
                              <span
                                className="ant-modal-close-x"
                              >
                                <ForwardRef(CloseOutlined)
                                  className="ant-modal-close-icon"
                                />
                              </span>
                            }
                            destroyOnClose={false}
                            focusTriggerAfterClose={true}
                            footer={null}
                            maskTransitionName="ant-fade"
                            motionName="ant-zoom"
                            onCancel={[Function]}
                            onClose={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            onOk={[Function]}
                            onVisibleChanged={[Function]}
                            prefixCls="ant-modal"
                            title="Create New API Token"
                            transitionName="ant-zoom"
                            visible={true}
                            width={520}
                            wrapClassName=""
                          >
                            <CSSMotion
                              motionName="ant-zoom"
                              onAppearPrepare={[Function]}
                              onEnterPrepare={[Function]}
                              onVisibleChanged={[Function]}
                              removeOnLeave={false}
                              visible={true}
                            >
                              <DomWrapper>
                                <Panel
                                  afterClose={[Function]}
                                  ariaId="test-id"
                                  className=""
                                  closable={true}
                                  closeIcon={
                                    <span
                                      className="ant-modal-close-x"
                                    >
                                      <ForwardRef(CloseOutlined)
                                        className="ant-modal-close-icon"
                                      />
                                    </span>
                                  }
                                  destroyOnClose={false}
                                  focusTriggerAfterClose={true}
                                  footer={null}
                                  holderRef={[Function]}
                                  maskTransitionName="ant-fade"
                                  motionName="ant-zoom"
                                  onCancel={[Function]}
                                  onClose={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  onOk={[Function]}
                                  onVisibleChanged={[Function]}
                                  prefixCls="ant-modal"
                                  style={Object {}}
                                  title="Create New API Token"
                                  transitionName="ant-zoom"
                                  visible={true}
                                  width={520}
                                  wrapClassName=""
                                >
                                  <div
                                    aria-labelledby="test-id"
                                    aria-modal="true"
                                    className="ant-modal"
                                    key="dialog-element"
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    role="dialog"
                                    style={
                                      Object {
                                        "width": 520,
                                      }
                                    }
                                  >
                                    <div
                                      aria-hidden="true"
                                      style={
                                        Object {
                                          "height": 0,
                                          "outline": "none",
                                          "overflow": "hidden",
                                          "width": 0,
                                        }
                                      }
                                      tabIndex={0}
                                    />
                                    <Component
                                      shouldUpdate={true}
                                    >
                                      <div
                                        className="ant-modal-content"
                                      >
                                        <button
                                          aria-label="Close"
                                          className="ant-modal-close"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <span
                                            className="ant-modal-close-x"
                                          >
                                            <ForwardRef(CloseOutlined)
                                              className="ant-modal-close-icon"
                                            >
                                              <AntdIcon
                                                className="ant-modal-close-icon"
                                                icon={
                                                  Object {
                                                    "icon": Object {
                                                      "attrs": Object {
                                                        "focusable": "false",
                                                        "viewBox": "64 64 896 896",
                                                      },
                                                      "children": Array [
                                                        Object {
                                                          "attrs": Object {
                                                            "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                          },
                                                          "tag": "path",
                                                        },
                                                      ],
                                                      "tag": "svg",
                                                    },
                                                    "name": "close",
                                                    "theme": "outlined",
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-label="close"
                                                  className="anticon anticon-close ant-modal-close-icon"
                                                  role="img"
                                                >
                                                  <IconReact
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "close",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      data-icon="close"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      key="svg-close"
                                                      viewBox="64 64 896 896"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                        key="svg-close-svg-0"
                                                      />
                                                    </svg>
                                                  </IconReact>
                                                </span>
                                              </AntdIcon>
                                            </ForwardRef(CloseOutlined)>
                                          </span>
                                        </button>
                                        <div
                                          className="ant-modal-header"
                                        >
                                          <div
                                            className="ant-modal-title"
                                            id="test-id"
                                          >
                                            Create New API Token
                                          </div>
                                        </div>
                                        <div
                                          className="ant-modal-body"
                                        >
                                          <mockConstructor
                                            appID={1}
                                            setTokenFlag={[MockFunction]}
                                            setVisible={[MockFunction]}
                                          >
                                            <div
                                              appID={1}
                                              id="mockedCreateTokenForm"
                                              setTokenFlag={[MockFunction]}
                                              setVisible={[MockFunction]}
                                            />
                                          </mockConstructor>
                                        </div>
                                      </div>
                                    </Component>
                                    <div
                                      aria-hidden="true"
                                      style={
                                        Object {
                                          "height": 0,
                                          "outline": "none",
                                          "overflow": "hidden",
                                          "width": 0,
                                        }
                                      }
                                      tabIndex={0}
                                    />
                                  </div>
                                </Panel>
                              </DomWrapper>
                            </CSSMotion>
                          </Content>
                        </div>
                      </div>
                    </Dialog>
                  </Portal>
                </Portal>
              </Dialog>
            </NoFormStyle>
          </NoCompactStyle>
        </Modal>
      </ApplicationDetail>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Application Detail component snapshot testing should render the component with no data 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ApplicationDetail
        setTokenFlag={[MockFunction]}
        setVisible={[MockFunction]}
        visible={true}
      >
        <ForwardRef(InternalTable)
          bordered={true}
          columns={
            Array [
              Object {
                "dataIndex": "name",
                "key": "name",
                "title": "Name",
                "width": "15%",
              },
              Object {
                "dataIndex": "token",
                "key": "token",
                "title": "Api Token",
                "width": "15%",
              },
              Object {
                "dataIndex": "operation",
                "render": [Function],
                "title": "Action",
                "width": "20%",
              },
            ]
          }
          dataSource={Array []}
          pagination={false}
          rowKey="id"
        >
          <div
            className="ant-table-wrapper"
          >
            <Spin
              spinning={false}
            >
              <Spin
                spinPrefixCls="ant-spin"
                spinning={false}
              >
                <div
                  className="ant-spin-nested-loading"
                >
                  <div
                    className="ant-spin-container"
                    key="container"
                  >
                    <Table
                      bordered={true}
                      className="ant-table-bordered ant-table-empty"
                      columns={
                        Array [
                          Object {
                            "dataIndex": "name",
                            "key": "name",
                            "title": "Name",
                            "width": "15%",
                          },
                          Object {
                            "dataIndex": "token",
                            "key": "token",
                            "title": "Api Token",
                            "width": "15%",
                          },
                          Object {
                            "dataIndex": "operation",
                            "render": [Function],
                            "title": "Action",
                            "width": "20%",
                          },
                        ]
                      }
                      data={Array []}
                      dataSource={Array []}
                      emptyText={
                        <Context.Consumer>
                          [Function]
                        </Context.Consumer>
                      }
                      expandable={
                        Object {
                          "__PARENT_RENDER_ICON__": undefined,
                          "childrenColumnName": undefined,
                          "expandIcon": [Function],
                          "expandIconColumnIndex": undefined,
                          "indentSize": 15,
                        }
                      }
                      internalHooks="rc-table-internal-hook"
                      internalRefs={
                        Object {
                          "body": Object {
                            "current": <div
                              class="ant-table-content"
                            >
                              <table
                                style="table-layout: auto;"
                              >
                                <colgroup>
                                  <col
                                    style="width: 15%;"
                                  />
                                  <col
                                    style="width: 15%;"
                                  />
                                  <col
                                    style="width: 20%;"
                                  />
                                </colgroup>
                                <thead
                                  class="ant-table-thead"
                                >
                                  <tr>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      Name
                                    </th>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      Api Token
                                    </th>
                                    <th
                                      class="ant-table-cell"
                                    >
                                      Action
                                    </th>
                                  </tr>
                                </thead>
                                <tbody
                                  class="ant-table-tbody"
                                >
                                  <tr
                                    class="ant-table-placeholder"
                                  >
                                    <td
                                      class="ant-table-cell"
                                      colspan="3"
                                    >
                                      <div
                                        class="ant-empty ant-empty-normal"
                                      >
                                        <div
                                          class="ant-empty-image"
                                        >
                                          <svg
                                            class="ant-empty-img-simple"
                                            height="41"
                                            viewBox="0 0 64 41"
                                            width="64"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <g
                                              fill="none"
                                              fill-rule="evenodd"
                                              transform="translate(0 1)"
                                            >
                                              <ellipse
                                                class="ant-empty-img-simple-ellipse"
                                                cx="32"
                                                cy="33"
                                                rx="32"
                                                ry="7"
                                              />
                                              <g
                                                class="ant-empty-img-simple-g"
                                                fill-rule="nonzero"
                                              >
                                                <path
                                                  d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                />
                                                <path
                                                  class="ant-empty-img-simple-path"
                                                  d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                />
                                              </g>
                                            </g>
                                          </svg>
                                        </div>
                                        <div
                                          class="ant-empty-description"
                                        >
                                          No data
                                        </div>
                                      </div>
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>,
                          },
                        }
                      }
                      pagination={false}
                      prefixCls="ant-table"
                      rowClassName={[Function]}
                      rowKey={[Function]}
                      transformColumns={[Function]}
                    >
                      <div
                        className="ant-table ant-table-bordered ant-table-empty"
                      >
                        <Component
                          pingLeft={false}
                          pingRight={false}
                          props={
                            Object {
                              "bordered": true,
                              "className": "ant-table-bordered ant-table-empty",
                              "columns": Array [
                                Object {
                                  "dataIndex": "name",
                                  "key": "name",
                                  "title": "Name",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "token",
                                  "key": "token",
                                  "title": "Api Token",
                                  "width": "15%",
                                },
                                Object {
                                  "dataIndex": "operation",
                                  "render": [Function],
                                  "title": "Action",
                                  "width": "20%",
                                },
                              ],
                              "data": Array [],
                              "dataSource": Array [],
                              "direction": undefined,
                              "emptyText": <Context.Consumer>
                                [Function]
                              </Context.Consumer>,
                              "expandable": Object {
                                "__PARENT_RENDER_ICON__": undefined,
                                "childrenColumnName": undefined,
                                "expandIcon": [Function],
                                "expandIconColumnIndex": undefined,
                                "indentSize": 15,
                              },
                              "internalHooks": "rc-table-internal-hook",
                              "internalRefs": Object {
                                "body": Object {
                                  "current": <div
                                    class="ant-table-content"
                                  >
                                    <table
                                      style="table-layout: auto;"
                                    >
                                      <colgroup>
                                        <col
                                          style="width: 15%;"
                                        />
                                        <col
                                          style="width: 15%;"
                                        />
                                        <col
                                          style="width: 20%;"
                                        />
                                      </colgroup>
                                      <thead
                                        class="ant-table-thead"
                                      >
                                        <tr>
                                          <th
                                            class="ant-table-cell"
                                          >
                                            Name
                                          </th>
                                          <th
                                            class="ant-table-cell"
                                          >
                                            Api Token
                                          </th>
                                          <th
                                            class="ant-table-cell"
                                          >
                                            Action
                                          </th>
                                        </tr>
                                      </thead>
                                      <tbody
                                        class="ant-table-tbody"
                                      >
                                        <tr
                                          class="ant-table-placeholder"
                                        >
                                          <td
                                            class="ant-table-cell"
                                            colspan="3"
                                          >
                                            <div
                                              class="ant-empty ant-empty-normal"
                                            >
                                              <div
                                                class="ant-empty-image"
                                              >
                                                <svg
                                                  class="ant-empty-img-simple"
                                                  height="41"
                                                  viewBox="0 0 64 41"
                                                  width="64"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <g
                                                    fill="none"
                                                    fill-rule="evenodd"
                                                    transform="translate(0 1)"
                                                  >
                                                    <ellipse
                                                      class="ant-empty-img-simple-ellipse"
                                                      cx="32"
                                                      cy="33"
                                                      rx="32"
                                                      ry="7"
                                                    />
                                                    <g
                                                      class="ant-empty-img-simple-g"
                                                      fill-rule="nonzero"
                                                    >
                                                      <path
                                                        d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                      />
                                                      <path
                                                        class="ant-empty-img-simple-path"
                                                        d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                      />
                                                    </g>
                                                  </g>
                                                </svg>
                                              </div>
                                              <div
                                                class="ant-empty-description"
                                              >
                                                No data
                                              </div>
                                            </div>
                                          </td>
                                        </tr>
                                      </tbody>
                                    </table>
                                  </div>,
                                },
                              },
                              "mergedExpandedKeys": Set {},
                              "pagination": false,
                              "prefixCls": "ant-table",
                              "rowClassName": [Function],
                              "rowKey": [Function],
                              "stickyOffsets": Object {
                                "left": Array [
                                  0,
                                  0,
                                  0,
                                ],
                                "right": Array [
                                  0,
                                  0,
                                  0,
                                ],
                              },
                              "transformColumns": [Function],
                            }
                          }
                        >
                          <div
                            className="ant-table-container"
                          >
                            <div
                              className="ant-table-content"
                              onScroll={[Function]}
                              style={Object {}}
                            >
                              <table
                                style={
                                  Object {
                                    "tableLayout": "auto",
                                  }
                                }
                              >
                                <ColGroup
                                  colWidths={
                                    Array [
                                      "15%",
                                      "15%",
                                      "20%",
                                    ]
                                  }
                                  columns={
                                    Array [
                                      Object {
                                        "dataIndex": "name",
                                        "fixed": undefined,
                                        "key": "name",
                                        "title": "Name",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "token",
                                        "fixed": undefined,
                                        "key": "token",
                                        "title": "Api Token",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "operation",
                                        "fixed": undefined,
                                        "render": [Function],
                                        "title": "Action",
                                        "width": "20%",
                                      },
                                    ]
                                  }
                                >
                                  <colgroup>
                                    <col
                                      key="0"
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                    />
                                    <col
                                      key="1"
                                      style={
                                        Object {
                                          "width": "15%",
                                        }
                                      }
                                    />
                                    <col
                                      key="2"
                                      style={
                                        Object {
                                          "width": "20%",
                                        }
                                      }
                                    />
                                  </colgroup>
                                </ColGroup>
                                <Header
                                  colWidths={
                                    Array [
                                      undefined,
                                      undefined,
                                      undefined,
                                    ]
                                  }
                                  columCount={3}
                                  columns={
                                    Array [
                                      Object {
                                        "dataIndex": "name",
                                        "key": "name",
                                        "title": "Name",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "token",
                                        "key": "token",
                                        "title": "Api Token",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "operation",
                                        "render": [Function],
                                        "title": "Action",
                                        "width": "20%",
                                      },
                                    ]
                                  }
                                  flattenColumns={
                                    Array [
                                      Object {
                                        "dataIndex": "name",
                                        "fixed": undefined,
                                        "key": "name",
                                        "title": "Name",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "token",
                                        "fixed": undefined,
                                        "key": "token",
                                        "title": "Api Token",
                                        "width": "15%",
                                      },
                                      Object {
                                        "dataIndex": "operation",
                                        "fixed": undefined,
                                        "render": [Function],
                                        "title": "Action",
                                        "width": "20%",
                                      },
                                    ]
                                  }
                                  stickyOffsets={
                                    Object {
                                      "left": Array [
                                        0,
                                        0,
                                        0,
                                      ],
                                      "right": Array [
                                        0,
                                        0,
                                        0,
                                      ],
                                    }
                                  }
                                >
                                  <thead
                                    className="ant-table-thead"
                                  >
                                    <HeaderRow
                                      cellComponent="th"
                                      cells={
                                        Array [
                                          Object {
                                            "children": "Name",
                                            "className": "",
                                            "colEnd": 0,
                                            "colSpan": 1,
                                            "colStart": 0,
                                            "column": Object {
                                              "dataIndex": "name",
                                              "key": "name",
                                              "title": "Name",
                                              "width": "15%",
                                            },
                                            "key": "name",
                                            "rowSpan": 1,
                                          },
                                          Object {
                                            "children": "Api Token",
                                            "className": "",
                                            "colEnd": 1,
                                            "colSpan": 1,
                                            "colStart": 1,
                                            "column": Object {
                                              "dataIndex": "token",
                                              "key": "token",
                                              "title": "Api Token",
                                              "width": "15%",
                                            },
                                            "key": "token",
                                            "rowSpan": 1,
                                          },
                                          Object {
                                            "children": "Action",
                                            "className": "",
                                            "colEnd": 2,
                                            "colSpan": 1,
                                            "colStart": 2,
                                            "column": Object {
                                              "dataIndex": "operation",
                                              "render": [Function],
                                              "title": "Action",
                                              "width": "20%",
                                            },
                                            "key": undefined,
                                            "rowSpan": 1,
                                          },
                                        ]
                                      }
                                      flattenColumns={
                                        Array [
                                          Object {
                                            "dataIndex": "name",
                                            "fixed": undefined,
                                            "key": "name",
                                            "title": "Name",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "token",
                                            "fixed": undefined,
                                            "key": "token",
                                            "title": "Api Token",
                                            "width": "15%",
                                          },
                                          Object {
                                            "dataIndex": "operation",
                                            "fixed": undefined,
                                            "render": [Function],
                                            "title": "Action",
                                            "width": "20%",
                                          },
                                        ]
                                      }
                                      index={0}
                                      key="0"
                                      rowComponent="tr"
                                      stickyOffsets={
                                        Object {
                                          "left": Array [
                                            0,
                                            0,
                                            0,
                                          ],
                                          "right": Array [
                                            0,
                                            0,
                                            0,
                                          ],
                                        }
                                      }
                                    >
                                      <tr>
                                        <WrappedCell
                                          className=""
                                          colEnd={0}
                                          colSpan={1}
                                          colStart={0}
                                          column={
                                            Object {
                                              "dataIndex": "name",
                                              "key": "name",
                                              "title": "Name",
                                              "width": "15%",
                                            }
                                          }
                                          component="th"
                                          firstFixLeft={false}
                                          firstFixRight={false}
                                          key="name"
                                          lastFixLeft={false}
                                          lastFixRight={false}
                                          prefixCls="ant-table"
                                          rowSpan={1}
                                          rowType="header"
                                        >
                                          <Cell
                                            className=""
                                            colEnd={0}
                                            colSpan={1}
                                            colStart={0}
                                            column={
                                              Object {
                                                "dataIndex": "name",
                                                "key": "name",
                                                "title": "Name",
                                                "width": "15%",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            hovering={false}
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              Name
                                            </th>
                                          </Cell>
                                        </WrappedCell>
                                        <WrappedCell
                                          className=""
                                          colEnd={1}
                                          colSpan={1}
                                          colStart={1}
                                          column={
                                            Object {
                                              "dataIndex": "token",
                                              "key": "token",
                                              "title": "Api Token",
                                              "width": "15%",
                                            }
                                          }
                                          component="th"
                                          firstFixLeft={false}
                                          firstFixRight={false}
                                          key="token"
                                          lastFixLeft={false}
                                          lastFixRight={false}
                                          prefixCls="ant-table"
                                          rowSpan={1}
                                          rowType="header"
                                        >
                                          <Cell
                                            className=""
                                            colEnd={1}
                                            colSpan={1}
                                            colStart={1}
                                            column={
                                              Object {
                                                "dataIndex": "token",
                                                "key": "token",
                                                "title": "Api Token",
                                                "width": "15%",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            hovering={false}
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              Api Token
                                            </th>
                                          </Cell>
                                        </WrappedCell>
                                        <WrappedCell
                                          className=""
                                          colEnd={2}
                                          colSpan={1}
                                          colStart={2}
                                          column={
                                            Object {
                                              "dataIndex": "operation",
                                              "render": [Function],
                                              "title": "Action",
                                              "width": "20%",
                                            }
                                          }
                                          component="th"
                                          firstFixLeft={false}
                                          firstFixRight={false}
                                          key="operation"
                                          lastFixLeft={false}
                                          lastFixRight={false}
                                          prefixCls="ant-table"
                                          rowSpan={1}
                                          rowType="header"
                                        >
                                          <Cell
                                            className=""
                                            colEnd={2}
                                            colSpan={1}
                                            colStart={2}
                                            column={
                                              Object {
                                                "dataIndex": "operation",
                                                "render": [Function],
                                                "title": "Action",
                                                "width": "20%",
                                              }
                                            }
                                            component="th"
                                            firstFixLeft={false}
                                            firstFixRight={false}
                                            hovering={false}
                                            lastFixLeft={false}
                                            lastFixRight={false}
                                            prefixCls="ant-table"
                                            rowSpan={1}
                                            rowType="header"
                                          >
                                            <th
                                              className="ant-table-cell"
                                              colSpan={null}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              Action
                                            </th>
                                          </Cell>
                                        </WrappedCell>
                                      </tr>
                                    </HeaderRow>
                                  </thead>
                                </Header>
                                <Body
                                  childrenColumnName="children"
                                  data={Array []}
                                  emptyNode={
                                    <Context.Consumer>
                                      [Function]
                                    </Context.Consumer>
                                  }
                                  expandedKeys={Set {}}
                                  getRowKey={[Function]}
                                  measureColumnWidth={false}
                                >
                                  <Provider
                                    value={
                                      Object {
                                        "endRow": -1,
                                        "onHover": [Function],
                                        "startRow": -1,
                                      }
                                    }
                                  >
                                    <tbody
                                      className="ant-table-tbody"
                                    >
                                      <ExpandedRow
                                        cellComponent="td"
                                        className="ant-table-placeholder"
                                        colSpan={3}
                                        component="tr"
                                        expanded={true}
                                        isEmpty={true}
                                        prefixCls="ant-table"
                                      >
                                        <tr
                                          className="ant-table-placeholder"
                                          style={
                                            Object {
                                              "display": null,
                                            }
                                          }
                                        >
                                          <WrappedCell
                                            colSpan={3}
                                            component="td"
                                            prefixCls="ant-table"
                                          >
                                            <Cell
                                              colSpan={3}
                                              component="td"
                                              hovering={false}
                                              onHover={[Function]}
                                              prefixCls="ant-table"
                                            >
                                              <td
                                                className="ant-table-cell"
                                                colSpan={3}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                rowSpan={null}
                                                style={Object {}}
                                              >
                                                <Empty
                                                  image={<Simple />}
                                                >
                                                  <LocaleReceiver
                                                    componentName="Empty"
                                                  >
                                                    <div
                                                      className="ant-empty ant-empty-normal"
                                                    >
                                                      <div
                                                        className="ant-empty-image"
                                                      >
                                                        <Simple>
                                                          <svg
                                                            className="ant-empty-img-simple"
                                                            height="41"
                                                            viewBox="0 0 64 41"
                                                            width="64"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <g
                                                              fill="none"
                                                              fillRule="evenodd"
                                                              transform="translate(0 1)"
                                                            >
                                                              <ellipse
                                                                className="ant-empty-img-simple-ellipse"
                                                                cx="32"
                                                                cy="33"
                                                                rx="32"
                                                                ry="7"
                                                              />
                                                              <g
                                                                className="ant-empty-img-simple-g"
                                                                fillRule="nonzero"
                                                              >
                                                                <path
                                                                  d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                />
                                                                <path
                                                                  className="ant-empty-img-simple-path"
                                                                  d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                />
                                                              </g>
                                                            </g>
                                                          </svg>
                                                        </Simple>
                                                      </div>
                                                      <div
                                                        className="ant-empty-description"
                                                      >
                                                        No data
                                                      </div>
                                                    </div>
                                                  </LocaleReceiver>
                                                </Empty>
                                              </td>
                                            </Cell>
                                          </WrappedCell>
                                        </tr>
                                      </ExpandedRow>
                                    </tbody>
                                  </Provider>
                                </Body>
                              </table>
                            </div>
                          </div>
                        </Component>
                      </div>
                    </Table>
                  </div>
                </div>
              </Spin>
            </Spin>
          </div>
        </ForwardRef(InternalTable)>
        <Button
          onClick={[Function]}
          style={
            Object {
              "marginTop": 5,
            }
          }
        >
          <Wave
            disabled={false}
          >
            <button
              className="ant-btn ant-btn-default"
              disabled={false}
              onClick={[Function]}
              style={
                Object {
                  "marginTop": 5,
                }
              }
              type="button"
            >
              <LoadingIcon
                existIcon={false}
                loading={false}
                prefixCls="ant-btn"
              >
                <CSSMotion
                  motionName="ant-btn-loading-icon-motion"
                  onAppearActive={[Function]}
                  onAppearStart={[Function]}
                  onEnterActive={[Function]}
                  onEnterStart={[Function]}
                  onLeaveActive={[Function]}
                  onLeaveStart={[Function]}
                  removeOnLeave={true}
                  visible={false}
                >
                  <DomWrapper />
                </CSSMotion>
              </LoadingIcon>
              <ForwardRef(PlusOutlined)
                key=".0"
              >
                <AntdIcon
                  icon={
                    Object {
                      "icon": Object {
                        "attrs": Object {
                          "focusable": "false",
                          "viewBox": "64 64 896 896",
                        },
                        "children": Array [
                          Object {
                            "attrs": Object {},
                            "children": Array [
                              Object {
                                "attrs": Object {},
                                "tag": "style",
                              },
                            ],
                            "tag": "defs",
                          },
                          Object {
                            "attrs": Object {
                              "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                            },
                            "tag": "path",
                          },
                          Object {
                            "attrs": Object {
                              "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                            },
                            "tag": "path",
                          },
                        ],
                        "tag": "svg",
                      },
                      "name": "plus",
                      "theme": "outlined",
                    }
                  }
                >
                  <span
                    aria-label="plus"
                    className="anticon anticon-plus"
                    role="img"
                  >
                    <IconReact
                      icon={
                        Object {
                          "icon": Object {
                            "attrs": Object {
                              "focusable": "false",
                              "viewBox": "64 64 896 896",
                            },
                            "children": Array [
                              Object {
                                "attrs": Object {},
                                "children": Array [
                                  Object {
                                    "attrs": Object {},
                                    "tag": "style",
                                  },
                                ],
                                "tag": "defs",
                              },
                              Object {
                                "attrs": Object {
                                  "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                },
                                "tag": "path",
                              },
                              Object {
                                "attrs": Object {
                                  "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                },
                                "tag": "path",
                              },
                            ],
                            "tag": "svg",
                          },
                          "name": "plus",
                          "theme": "outlined",
                        }
                      }
                    >
                      <svg
                        aria-hidden="true"
                        data-icon="plus"
                        fill="currentColor"
                        focusable="false"
                        height="1em"
                        key="svg-plus"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <defs
                          key="svg-plus-svg-0"
                        >
                          <style
                            key="svg-plus-svg-0-defs-0"
                          />
                        </defs>
                        <path
                          d="M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"
                          key="svg-plus-svg-1"
                        />
                        <path
                          d="M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"
                          key="svg-plus-svg-2"
                        />
                      </svg>
                    </IconReact>
                  </span>
                </AntdIcon>
              </ForwardRef(PlusOutlined)>
              <span
                key=".1"
              >
                New api key
              </span>
            </button>
          </Wave>
        </Button>
        <Modal
          footer={null}
          onCancel={[Function]}
          onOk={[Function]}
          title="Create New API Token"
          visible={true}
        >
          <NoCompactStyle>
            <NoFormStyle
              override={true}
              status={true}
            >
              <Dialog
                closeIcon={
                  <span
                    className="ant-modal-close-x"
                  >
                    <ForwardRef(CloseOutlined)
                      className="ant-modal-close-icon"
                    />
                  </span>
                }
                focusTriggerAfterClose={true}
                footer={null}
                maskTransitionName="ant-fade"
                onCancel={[Function]}
                onClose={[Function]}
                onOk={[Function]}
                prefixCls="ant-modal"
                title="Create New API Token"
                transitionName="ant-zoom"
                visible={true}
                width={520}
                wrapClassName=""
              >
                <Portal
                  autoDestroy={false}
                  autoLock={true}
                  open={true}
                >
                  <Portal
                    containerInfo={
                      <div>
                        <div
                          class="ant-modal-root"
                        >
                          <div
                            class="ant-modal-mask"
                          />
                          <div
                            class="ant-modal-wrap"
                            tabindex="-1"
                          >
                            <div
                              aria-labelledby="test-id"
                              aria-modal="true"
                              class="ant-modal"
                              role="dialog"
                              style="width: 520px;"
                            >
                              <div
                                aria-hidden="true"
                                style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                                tabindex="0"
                              />
                              <div
                                class="ant-modal-content"
                              >
                                <button
                                  aria-label="Close"
                                  class="ant-modal-close"
                                  type="button"
                                >
                                  <span
                                    class="ant-modal-close-x"
                                  >
                                    <span
                                      aria-label="close"
                                      class="anticon anticon-close ant-modal-close-icon"
                                      role="img"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        data-icon="close"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                        />
                                      </svg>
                                    </span>
                                  </span>
                                </button>
                                <div
                                  class="ant-modal-header"
                                >
                                  <div
                                    class="ant-modal-title"
                                    id="test-id"
                                  >
                                    Create New API Token
                                  </div>
                                </div>
                                <div
                                  class="ant-modal-body"
                                >
                                  <div
                                    id="mockedCreateTokenForm"
                                  />
                                </div>
                              </div>
                              <div
                                aria-hidden="true"
                                style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                                tabindex="0"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    }
                  >
                    <Dialog
                      afterClose={[Function]}
                      closeIcon={
                        <span
                          className="ant-modal-close-x"
                        >
                          <ForwardRef(CloseOutlined)
                            className="ant-modal-close-icon"
                          />
                        </span>
                      }
                      destroyOnClose={false}
                      focusTriggerAfterClose={true}
                      footer={null}
                      maskTransitionName="ant-fade"
                      onCancel={[Function]}
                      onClose={[Function]}
                      onOk={[Function]}
                      prefixCls="ant-modal"
                      title="Create New API Token"
                      transitionName="ant-zoom"
                      visible={true}
                      width={520}
                      wrapClassName=""
                    >
                      <div
                        className="ant-modal-root"
                      >
                        <Mask
                          motionName="ant-fade"
                          prefixCls="ant-modal"
                          style={
                            Object {
                              "zIndex": undefined,
                            }
                          }
                          visible={true}
                        >
                          <CSSMotion
                            key="mask"
                            leavedClassName="ant-modal-mask-hidden"
                            motionName="ant-fade"
                            visible={true}
                          >
                            <DomWrapper>
                              <div
                                className="ant-modal-mask"
                                style={
                                  Object {
                                    "zIndex": undefined,
                                  }
                                }
                              />
                            </DomWrapper>
                          </CSSMotion>
                        </Mask>
                        <div
                          className="ant-modal-wrap"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          style={
                            Object {
                              "display": null,
                              "zIndex": undefined,
                            }
                          }
                          tabIndex={-1}
                        >
                          <Content
                            afterClose={[Function]}
                            ariaId="test-id"
                            closable={true}
                            closeIcon={
                              <span
                                className="ant-modal-close-x"
                              >
                                <ForwardRef(CloseOutlined)
                                  className="ant-modal-close-icon"
                                />
                              </span>
                            }
                            destroyOnClose={false}
                            focusTriggerAfterClose={true}
                            footer={null}
                            maskTransitionName="ant-fade"
                            motionName="ant-zoom"
                            onCancel={[Function]}
                            onClose={[Function]}
                            onMouseDown={[Function]}
                            onMouseUp={[Function]}
                            onOk={[Function]}
                            onVisibleChanged={[Function]}
                            prefixCls="ant-modal"
                            title="Create New API Token"
                            transitionName="ant-zoom"
                            visible={true}
                            width={520}
                            wrapClassName=""
                          >
                            <CSSMotion
                              motionName="ant-zoom"
                              onAppearPrepare={[Function]}
                              onEnterPrepare={[Function]}
                              onVisibleChanged={[Function]}
                              removeOnLeave={false}
                              visible={true}
                            >
                              <DomWrapper>
                                <Panel
                                  afterClose={[Function]}
                                  ariaId="test-id"
                                  className=""
                                  closable={true}
                                  closeIcon={
                                    <span
                                      className="ant-modal-close-x"
                                    >
                                      <ForwardRef(CloseOutlined)
                                        className="ant-modal-close-icon"
                                      />
                                    </span>
                                  }
                                  destroyOnClose={false}
                                  focusTriggerAfterClose={true}
                                  footer={null}
                                  holderRef={[Function]}
                                  maskTransitionName="ant-fade"
                                  motionName="ant-zoom"
                                  onCancel={[Function]}
                                  onClose={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  onOk={[Function]}
                                  onVisibleChanged={[Function]}
                                  prefixCls="ant-modal"
                                  style={Object {}}
                                  title="Create New API Token"
                                  transitionName="ant-zoom"
                                  visible={true}
                                  width={520}
                                  wrapClassName=""
                                >
                                  <div
                                    aria-labelledby="test-id"
                                    aria-modal="true"
                                    className="ant-modal"
                                    key="dialog-element"
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    role="dialog"
                                    style={
                                      Object {
                                        "width": 520,
                                      }
                                    }
                                  >
                                    <div
                                      aria-hidden="true"
                                      style={
                                        Object {
                                          "height": 0,
                                          "outline": "none",
                                          "overflow": "hidden",
                                          "width": 0,
                                        }
                                      }
                                      tabIndex={0}
                                    />
                                    <Component
                                      shouldUpdate={true}
                                    >
                                      <div
                                        className="ant-modal-content"
                                      >
                                        <button
                                          aria-label="Close"
                                          className="ant-modal-close"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <span
                                            className="ant-modal-close-x"
                                          >
                                            <ForwardRef(CloseOutlined)
                                              className="ant-modal-close-icon"
                                            >
                                              <AntdIcon
                                                className="ant-modal-close-icon"
                                                icon={
                                                  Object {
                                                    "icon": Object {
                                                      "attrs": Object {
                                                        "focusable": "false",
                                                        "viewBox": "64 64 896 896",
                                                      },
                                                      "children": Array [
                                                        Object {
                                                          "attrs": Object {
                                                            "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                          },
                                                          "tag": "path",
                                                        },
                                                      ],
                                                      "tag": "svg",
                                                    },
                                                    "name": "close",
                                                    "theme": "outlined",
                                                  }
                                                }
                                              >
                                                <span
                                                  aria-label="close"
                                                  className="anticon anticon-close ant-modal-close-icon"
                                                  role="img"
                                                >
                                                  <IconReact
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "close",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      data-icon="close"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      key="svg-close"
                                                      viewBox="64 64 896 896"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                                        key="svg-close-svg-0"
                                                      />
                                                    </svg>
                                                  </IconReact>
                                                </span>
                                              </AntdIcon>
                                            </ForwardRef(CloseOutlined)>
                                          </span>
                                        </button>
                                        <div
                                          className="ant-modal-header"
                                        >
                                          <div
                                            className="ant-modal-title"
                                            id="test-id"
                                          >
                                            Create New API Token
                                          </div>
                                        </div>
                                        <div
                                          className="ant-modal-body"
                                        >
                                          <mockConstructor
                                            appID={null}
                                            setTokenFlag={[MockFunction]}
                                            setVisible={[MockFunction]}
                                          >
                                            <div
                                              appID={null}
                                              id="mockedCreateTokenForm"
                                              setTokenFlag={[MockFunction]}
                                              setVisible={[MockFunction]}
                                            />
                                          </mockConstructor>
                                        </div>
                                      </div>
                                    </Component>
                                    <div
                                      aria-hidden="true"
                                      style={
                                        Object {
                                          "height": 0,
                                          "outline": "none",
                                          "overflow": "hidden",
                                          "width": 0,
                                        }
                                      }
                                      tabIndex={0}
                                    />
                                  </div>
                                </Panel>
                              </DomWrapper>
                            </CSSMotion>
                          </Content>
                        </div>
                      </div>
                    </Dialog>
                  </Portal>
                </Portal>
              </Dialog>
            </NoFormStyle>
          </NoCompactStyle>
        </Modal>
      </ApplicationDetail>
    </Router>
  </BrowserRouter>
</Provider>
`;
