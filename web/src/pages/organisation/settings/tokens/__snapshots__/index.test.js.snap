// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Organisation Token List component snapshots should render while loading is true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OrganisationTokens>
        <div>
          <Skeleton>
            <div
              className="ant-skeleton"
            >
              <div
                className="ant-skeleton-content"
              >
                <Title
                  prefixCls="ant-skeleton-title"
                  width="38%"
                >
                  <h3
                    className="ant-skeleton-title"
                    style={
                      Object {
                        "width": "38%",
                      }
                    }
                  />
                </Title>
                <Paragraph
                  prefixCls="ant-skeleton-paragraph"
                  rows={3}
                  width="61%"
                >
                  <ul
                    className="ant-skeleton-paragraph"
                  >
                    <li
                      key="0"
                      style={
                        Object {
                          "width": undefined,
                        }
                      }
                    />
                    <li
                      key="1"
                      style={
                        Object {
                          "width": undefined,
                        }
                      }
                    />
                    <li
                      key="2"
                      style={
                        Object {
                          "width": "61%",
                        }
                      }
                    />
                  </ul>
                </Paragraph>
              </div>
            </div>
          </Skeleton>
        </div>
      </OrganisationTokens>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Organisation Token List component snapshots should render while loadingorg is true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OrganisationTokens>
        <div>
          <Skeleton>
            <div
              className="ant-skeleton"
            >
              <div
                className="ant-skeleton-content"
              >
                <Title
                  prefixCls="ant-skeleton-title"
                  width="38%"
                >
                  <h3
                    className="ant-skeleton-title"
                    style={
                      Object {
                        "width": "38%",
                      }
                    }
                  />
                </Title>
                <Paragraph
                  prefixCls="ant-skeleton-paragraph"
                  rows={3}
                  width="61%"
                >
                  <ul
                    className="ant-skeleton-paragraph"
                  >
                    <li
                      key="0"
                      style={
                        Object {
                          "width": undefined,
                        }
                      }
                    />
                    <li
                      key="1"
                      style={
                        Object {
                          "width": undefined,
                        }
                      }
                    />
                    <li
                      key="2"
                      style={
                        Object {
                          "width": "61%",
                        }
                      }
                    />
                  </ul>
                </Paragraph>
              </div>
            </div>
          </Skeleton>
        </div>
      </OrganisationTokens>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Organisation Token List component snapshots should render while role is not owner 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OrganisationTokens>
        <div>
          <Space
            direction="vertical"
          >
            <div
              className="ant-space ant-space-vertical"
              style={Object {}}
            >
              <Item
                className="ant-space-item"
                direction="vertical"
                index={0}
                key="1"
                marginDirection="marginRight"
                wrap={false}
              >
                <div
                  className="ant-space-item"
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  <Link
                    key="1"
                    to="/organisation"
                  >
                    <LinkAnchor
                      href="/organisation"
                      navigate={[Function]}
                    >
                      <a
                        href="/organisation"
                        onClick={[Function]}
                      >
                        <Button
                          type="primary"
                        >
                          <Wave
                            disabled={false}
                          >
                            <button
                              className="ant-btn ant-btn-primary"
                              disabled={false}
                              onClick={[Function]}
                              type="button"
                            >
                              <LoadingIcon
                                existIcon={false}
                                loading={false}
                                prefixCls="ant-btn"
                              >
                                <CSSMotion
                                  motionName="ant-btn-loading-icon-motion"
                                  onAppearActive={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveStart={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </LoadingIcon>
                              <span
                                key=".0"
                              >
                                 Back to Settings 
                              </span>
                            </button>
                          </Wave>
                        </Button>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </Item>
              <Item
                className="ant-space-item"
                direction="vertical"
                index={1}
                key="ant-space-item-1"
                marginDirection="marginRight"
                wrap={false}
              >
                <div
                  className="ant-space-item"
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  <h2>
                    Tokens in 
                  </h2>
                </div>
              </Item>
              <Item
                className="ant-space-item"
                direction="vertical"
                index={2}
                key="ant-space-item-2"
                marginDirection="marginRight"
                wrap={false}
              >
                <div
                  className="ant-space-item"
                  style={Object {}}
                >
                  <Space
                    direction="vertical"
                  >
                    <div
                      className="ant-space ant-space-vertical"
                      style={Object {}}
                    >
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={0}
                        key="ant-space-item-0"
                        marginDirection="marginRight"
                        wrap={false}
                      />
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={1}
                        key="ant-space-item-1"
                        marginDirection="marginRight"
                        wrap={false}
                      >
                        <div
                          className="ant-space-item"
                          style={Object {}}
                        >
                          <default
                            orgID={1}
                            role="admin"
                          >
                            <div>
                              Mocked Token List
                            </div>
                          </default>
                        </div>
                      </Item>
                    </div>
                  </Space>
                </div>
              </Item>
            </div>
          </Space>
        </div>
      </OrganisationTokens>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Organisation Token List component snapshots should render while role is owner 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <OrganisationTokens>
        <div>
          <Space
            direction="vertical"
          >
            <div
              className="ant-space ant-space-vertical"
              style={Object {}}
            >
              <Item
                className="ant-space-item"
                direction="vertical"
                index={0}
                key="1"
                marginDirection="marginRight"
                wrap={false}
              >
                <div
                  className="ant-space-item"
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  <Link
                    key="1"
                    to="/organisation"
                  >
                    <LinkAnchor
                      href="/organisation"
                      navigate={[Function]}
                    >
                      <a
                        href="/organisation"
                        onClick={[Function]}
                      >
                        <Button
                          type="primary"
                        >
                          <Wave
                            disabled={false}
                          >
                            <button
                              className="ant-btn ant-btn-primary"
                              disabled={false}
                              onClick={[Function]}
                              type="button"
                            >
                              <LoadingIcon
                                existIcon={false}
                                loading={false}
                                prefixCls="ant-btn"
                              >
                                <CSSMotion
                                  motionName="ant-btn-loading-icon-motion"
                                  onAppearActive={[Function]}
                                  onAppearStart={[Function]}
                                  onEnterActive={[Function]}
                                  onEnterStart={[Function]}
                                  onLeaveActive={[Function]}
                                  onLeaveStart={[Function]}
                                  removeOnLeave={true}
                                  visible={false}
                                >
                                  <DomWrapper />
                                </CSSMotion>
                              </LoadingIcon>
                              <span
                                key=".0"
                              >
                                 Back to Settings 
                              </span>
                            </button>
                          </Wave>
                        </Button>
                      </a>
                    </LinkAnchor>
                  </Link>
                </div>
              </Item>
              <Item
                className="ant-space-item"
                direction="vertical"
                index={1}
                key="ant-space-item-1"
                marginDirection="marginRight"
                wrap={false}
              >
                <div
                  className="ant-space-item"
                  style={
                    Object {
                      "marginBottom": 8,
                    }
                  }
                >
                  <h2>
                    Tokens in 
                  </h2>
                </div>
              </Item>
              <Item
                className="ant-space-item"
                direction="vertical"
                index={2}
                key="ant-space-item-2"
                marginDirection="marginRight"
                wrap={false}
              >
                <div
                  className="ant-space-item"
                  style={Object {}}
                >
                  <Space
                    direction="vertical"
                  >
                    <div
                      className="ant-space ant-space-vertical"
                      style={Object {}}
                    >
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={0}
                        key="ant-space-item-0"
                        marginDirection="marginRight"
                        wrap={false}
                      >
                        <div
                          className="ant-space-item"
                          style={
                            Object {
                              "marginBottom": 8,
                            }
                          }
                        >
                          <div
                            style={
                              Object {
                                "display": "flex",
                                "justifyContent": "end",
                              }
                            }
                          >
                            <Link
                              key="1"
                              to={
                                Object {
                                  "pathname": "/organisation/1/settings/tokens/create",
                                }
                              }
                            >
                              <LinkAnchor
                                href="/organisation/1/settings/tokens/create"
                                navigate={[Function]}
                              >
                                <a
                                  href="/organisation/1/settings/tokens/create"
                                  onClick={[Function]}
                                >
                                  <Button
                                    type="primary"
                                  >
                                    <Wave
                                      disabled={false}
                                    >
                                      <button
                                        className="ant-btn ant-btn-primary"
                                        disabled={false}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <LoadingIcon
                                          existIcon={false}
                                          loading={false}
                                          prefixCls="ant-btn"
                                        >
                                          <CSSMotion
                                            motionName="ant-btn-loading-icon-motion"
                                            onAppearActive={[Function]}
                                            onAppearStart={[Function]}
                                            onEnterActive={[Function]}
                                            onEnterStart={[Function]}
                                            onLeaveActive={[Function]}
                                            onLeaveStart={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </LoadingIcon>
                                        <span
                                          key=".0"
                                        >
                                           Generate new tokens 
                                        </span>
                                      </button>
                                    </Wave>
                                  </Button>
                                </a>
                              </LinkAnchor>
                            </Link>
                          </div>
                        </div>
                      </Item>
                      <Item
                        className="ant-space-item"
                        direction="vertical"
                        index={1}
                        key="ant-space-item-1"
                        marginDirection="marginRight"
                        wrap={false}
                      >
                        <div
                          className="ant-space-item"
                          style={Object {}}
                        >
                          <default
                            orgID={1}
                            role="owner"
                          >
                            <div>
                              Mocked Token List
                            </div>
                          </default>
                        </div>
                      </Item>
                    </div>
                  </Space>
                </div>
              </Item>
            </div>
          </Space>
        </div>
      </OrganisationTokens>
    </Router>
  </BrowserRouter>
</Provider>
`;
